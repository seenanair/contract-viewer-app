{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataBuilder = () => {\n  _s();\n\n  const [loading, setLoading] = React.useState(false);\n  const [data, setData] = React.useState([]);\n\n  const formatData = data => {\n    return {\n      title: data.title,\n      id: data.id\n    };\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    const apiUrl = `https://api.test.datacite.org/dois?query=prefix:10.5517`;\n    fetch(apiUrl).then(res => res.json()).then(data => {\n      setLoading(false);\n      console.log(data);\n      setData(data);\n    });\n  }, []);\n  /*  const List = (data:any[]) => {\n      if (!data || data.length === 0) return <p>No repos, sorry</p>;\n      return (\n        <ul>\n          <h2 className='list-head'>Available Public Repositories</h2>\n          {data.map((dataVal) => {\n            return (\n              <li key={dataVal.id} className='list'>\n                <span className='repo-text'>{repo.name} </span>\n                <span className='repo-description'>{repo.description}</span>\n              </li>\n            );\n          })}\n        </ul>\n      );\n    };*/\n\n  const listData = dataVal => {\n    console.log(\"Data in Listing\");\n    console.log(dataVal);\n    const newData = Array.from(dataVal);\n    newData.map(val => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list\"\n      }, val.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [listData(data), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataBuilder, \"W9p+vtoRMXlGtZRCsL2r3fc0KIo=\");\n\n_c = DataBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataBuilder\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx"],"names":["React","DataBuilder","loading","setLoading","useState","data","setData","formatData","title","id","useEffect","apiUrl","fetch","then","res","json","console","log","listData","dataVal","newData","Array","from","map","val"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAE/B,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBH,KAAK,CAACI,QAAN,CAAe,KAAf,CAA7B;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,KAAK,CAACI,QAAN,CAAgC,EAAhC,CAAvB;;AAED,QAAMG,UAAU,GAAIF,IAAD,IAClB;AACI,WAAO;AAAEG,MAAAA,KAAK,EAAEH,IAAI,CAACG,KAAd;AAAqBC,MAAAA,EAAE,EAAEJ,IAAI,CAACI;AAA9B,KAAP;AACH,GAHF;;AAIET,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACrBP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMQ,MAAM,GAAI,yDAAhB;AACAC,IAAAA,KAAK,CAACD,MAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESR,IAAD,IAAU;AACdF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACAC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KANH;AAOD,GAVA,EAUE,EAVF;AAYH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAMa,QAAQ,GAAIC,OAAD,IAAiB;AAChCH,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACA,UAAMC,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAWH,OAAX,CAAhB;AACAC,IAAAA,OAAO,CAACG,GAAR,CAAaC,GAAD,IAAa;AACrB,0BACE;AAAiB,QAAA,SAAS,EAAC;AAA3B,SAASA,GAAG,CAACf,EAAb;AAAA;AAAA;AAAA;AAAA,cADF;AAID,KALH;AAMD,GAVD;;AAYE,sBACI;AAAA,eACKS,QAAQ,CAACb,IAAD,CADb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvDM;;GAAMJ,W;;KAAAA,W","sourcesContent":["\nimport React from \"react\";\nimport { StructuralData } from \"./SDInterface\";\n\nexport const DataBuilder = () => {\n\n  const [loading,setLoading] = React.useState(false);\n  const [data,setData] = React.useState<any[]|undefined>([]);\n\n const formatData = (data: any): StructuralData => \n  {\n      return { title: data.title, id: data.id }\n  }\n   React.useEffect(() => {\n    setLoading(true);\n    const apiUrl = `https://api.test.datacite.org/dois?query=prefix:10.5517`;\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        console.log(data);\n        setData(data);\n      });\n  }, []);\n\n/*  const List = (data:any[]) => {\n    if (!data || data.length === 0) return <p>No repos, sorry</p>;\n    return (\n      <ul>\n        <h2 className='list-head'>Available Public Repositories</h2>\n        {data.map((dataVal) => {\n          return (\n            <li key={dataVal.id} className='list'>\n              <span className='repo-text'>{repo.name} </span>\n              <span className='repo-description'>{repo.description}</span>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };*/\n\n  const listData = (dataVal:any) => {\n    console.log(\"Data in Listing\");\n    console.log(dataVal);\n    const newData = Array.from(dataVal)\n    newData.map((val:any) => {\n        return (\n          <li key={val.id} className='list'>\n          </li>\n        );\n      })\n  }\n\n    return (\n        <div>\n            {listData(data)};\n        </div>\n        )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}