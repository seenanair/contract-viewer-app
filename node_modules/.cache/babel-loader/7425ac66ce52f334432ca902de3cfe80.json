{"ast":null,"code":"import _slicedToArray from\"/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';export var useFetch=function useFetch(apiUrl){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];useEffect(function(){setLoading(true);setError({});var isFetch=true;try{fetch(apiUrl).then(function(res){return res.json();}).then(function(data){setLoading(false);if(isFetch)setData(data);});}catch(err){setError(err);}return function(){isFetch=false;};},[apiUrl]);return{data:data,loading:loading,error:error};};","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/hooks/useFetch.ts"],"names":["useEffect","useState","useFetch","apiUrl","data","setData","loading","setLoading","error","setError","isFetch","fetch","then","res","json","err"],"mappings":"kKAAA,OAAgBA,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAGA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,MAAD,CAAmB,eAEhBF,QAAQ,CAAC,EAAD,CAFQ,wCAEhCG,IAFgC,eAE3BC,OAF2B,8BAGTJ,QAAQ,CAAC,KAAD,CAHC,yCAGhCK,OAHgC,eAGvBC,UAHuB,8BAIdN,QAAQ,CAAC,EAAD,CAJM,yCAIhCO,KAJgC,eAI1BC,QAJ0B,eAOvCT,SAAS,CAAC,UAAM,CACZO,UAAU,CAAC,IAAD,CAAV,CACAE,QAAQ,CAAC,EAAD,CAAR,CACA,GAAIC,CAAAA,OAAO,CAAG,IAAd,CACA,GACA,CACIC,KAAK,CAACR,MAAD,CAAL,CACCS,IADD,CACM,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADN,EAECF,IAFD,CAEM,SAACR,IAAD,CAAU,CACZG,UAAU,CAAC,KAAD,CAAV,CACA,GAAGG,OAAH,CACGL,OAAO,CAACD,IAAD,CAAP,CAEX,CAPI,EAQH,CACD,MAAMW,GAAN,CACA,CACIN,QAAQ,CAACM,GAAD,CAAR,CACH,CACD,MAAO,WAAM,CAACL,OAAO,CAAG,KAAV,CAAgB,CAA9B,CACH,CApBQ,CAoBP,CAACP,MAAD,CApBO,CAAT,CAsBA,MAAO,CAACC,IAAI,CAAJA,IAAD,CAAME,OAAO,CAAPA,OAAN,CAAcE,KAAK,CAALA,KAAd,CAAP,CACH,CA9BM","sourcesContent":["import React, { useEffect, useState } from 'react';\n\n\nexport const useFetch = (apiUrl:string) => {\n\n    const [data,setData] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [error,setError] = useState({});\n\n\n    useEffect(() => {\n        setLoading(true);\n        setError({});\n        let isFetch = true;\n        try\n        {\n            fetch(apiUrl)\n            .then((res) => res.json())\n            .then((data) => {\n                setLoading(false);\n                if(isFetch) \n                   setData(data);\n\n       });\n        }\n        catch(err)\n        {\n            setError(err);\n        }\n        return(() => {isFetch = false})\n    },[apiUrl])\n\n    return {data,loading,error}\n}"]},"metadata":{},"sourceType":"module"}