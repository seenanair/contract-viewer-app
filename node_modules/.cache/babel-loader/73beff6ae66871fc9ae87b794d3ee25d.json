{"ast":null,"code":"import _slicedToArray from\"/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';//Custom hook for fetch\nexport var useFetch=function useFetch(apiUrl){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];useEffect(function(){setLoading(true);setError({});var isFetch=true;try{fetch(apiUrl).then(function(res){return res.json();}).then(function(data){setLoading(false);if(isFetch)setData(data);});}catch(err){setError(err);}return function(){isFetch=false;};},[apiUrl]);return{data:data,loading:loading,error:error};};","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/hooks/useFetch.ts"],"names":["useEffect","useState","useFetch","apiUrl","data","setData","loading","setLoading","error","setError","isFetch","fetch","then","res","json","err"],"mappings":"kKAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA;AACA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,MAAD,CAAoB,eAChBF,QAAQ,CAAC,EAAD,CADQ,wCACjCG,IADiC,eAC3BC,OAD2B,8BAEVJ,QAAQ,CAAC,KAAD,CAFE,yCAEjCK,OAFiC,eAExBC,UAFwB,8BAGdN,QAAQ,CAAC,EAAD,CAHM,yCAGjCO,KAHiC,eAG1BC,QAH0B,eAIxCT,SAAS,CAAC,UAAM,CACZO,UAAU,CAAC,IAAD,CAAV,CACAE,QAAQ,CAAC,EAAD,CAAR,CACA,GAAIC,CAAAA,OAAO,CAAG,IAAd,CACA,GAAI,CACAC,KAAK,CAACR,MAAD,CAAL,CACKS,IADL,CACU,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADV,EAEKF,IAFL,CAEU,SAACR,IAAD,CAAU,CACZG,UAAU,CAAC,KAAD,CAAV,CACA,GAAIG,OAAJ,CAAaL,OAAO,CAACD,IAAD,CAAP,CAChB,CALL,EAMH,CAAC,MAAOW,GAAP,CAAY,CACVN,QAAQ,CAACM,GAAD,CAAR,CACH,CACD,MAAO,WAAM,CACTL,OAAO,CAAG,KAAV,CACH,CAFD,CAGH,CAjBQ,CAiBN,CAACP,MAAD,CAjBM,CAAT,CAmBA,MAAO,CAAEC,IAAI,CAAJA,IAAF,CAAQE,OAAO,CAAPA,OAAR,CAAiBE,KAAK,CAALA,KAAjB,CAAP,CACH,CAxBM","sourcesContent":["import { useEffect, useState } from 'react';\n\n//Custom hook for fetch\nexport const useFetch = (apiUrl: string) => {\n    const [data, setData] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState({});\n    useEffect(() => {\n        setLoading(true);\n        setError({});\n        let isFetch = true;\n        try {\n            fetch(apiUrl)\n                .then((res) => res.json())\n                .then((data) => {\n                    setLoading(false);\n                    if (isFetch) setData(data);\n                });\n        } catch (err) {\n            setError(err);\n        }\n        return () => {\n            isFetch = false;\n        };\n    }, [apiUrl]);\n\n    return { data, loading, error };\n};\n"]},"metadata":{},"sourceType":"module"}