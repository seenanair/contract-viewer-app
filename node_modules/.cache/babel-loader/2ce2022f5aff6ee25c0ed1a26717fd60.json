{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/FEATURE_SPACE/FeatureSpace_Demo/feature-space-app/src/Components/Table/Table.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTable, usePagination } from 'react-table';\nimport classes from './Table.module.css'; //Function component to display a table\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Table = ({\n  columns,\n  data,\n  pageIndexValue,\n  pageSizeValue\n}) => {\n  _s();\n\n  const {\n    // Table - instance properties:\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    // Pagination - instance properties:\n    // @ts-ignore\n    page,\n    // Instead of using `rows`, we'll use `page`, which has only the rows for the active page\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    // Final state object of table:\n    state: {\n      pageIndex,\n      pageSize\n    } // @ts-ignore\n\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: pageIndexValue,\n      pageSize: pageSizeValue\n    }\n  }, usePagination); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Table,\n      children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: classes.TableHeader,\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              width: column.width,\n              ...column.getHeaderProps(),\n              className: classes.TableHeader,\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: page.map((row, indx) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              className: indx % 2 === 0 ? classes.TableRowEven : classes.TableRow,\n              children: row.cells.map((cell, indx) => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  className: classes.TableCell,\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), pageCount > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.TablePagination,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.PaginationButtonSpace,\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.PaginationButtonSpace,\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.PaginationButtonSpace,\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.PaginationButtonSpace,\n        onClick: () => gotoPage(pageCount - 1),\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.PaginationButtonSpace,\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"| Go to page:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: pageIndex + 1,\n          onChange: e => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(page);\n          },\n          style: {\n            width: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pageSize,\n        onChange: e => {\n          setPageSize(Number(e.target.value));\n        },\n        className: classes.PaginationButtonSpace,\n        children: [10, 20, 30, 40, 50].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pageSize,\n          children: [\"Show \", pageSize]\n        }, pageSize, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Table, \"TscALDq3DJXjXIEoXCfY6jccYkM=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/FEATURE_SPACE/FeatureSpace_Demo/feature-space-app/src/Components/Table/Table.tsx"],"names":["React","useTable","usePagination","classes","Table","columns","data","pageIndexValue","pageSizeValue","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","TableHeader","map","headerGroup","getHeaderGroupProps","headers","column","width","getHeaderProps","render","row","indx","getRowProps","TableRowEven","TableRow","cells","cell","getCellProps","TableCell","TablePagination","PaginationButtonSpace","length","e","target","value","Number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useTable, usePagination, Row } from 'react-table';\nimport classes from './Table.module.css';\n\n//Function component to display a table\nexport const Table = ({\n    columns,\n    data,\n    pageIndexValue,\n    pageSizeValue,\n}: {\n    columns: any;\n    data: any;\n    pageIndexValue: number;\n    pageSizeValue: number;\n}) => {\n    const {\n        // Table - instance properties:\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow, // Pagination - instance properties:\n        // @ts-ignore\n        page, // Instead of using `rows`, we'll use `page`, which has only the rows for the active page\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        // Final state object of table:\n        state: { pageIndex, pageSize },\n        // @ts-ignore\n    } = useTable(\n        {\n            columns,\n            data,\n            initialState: { pageIndex: pageIndexValue, pageSize: pageSizeValue },\n        },\n        usePagination,\n    );\n\n  \n    // Render the UI for your table\n    return (\n        <>\n            {/* from https://react-table.tanstack.com/docs/examples/pagination\n        Pagination can be built however you'd like. \n        This is just a very basic UI implementation:\n      */}\n\n            <div className={classes.Table}>\n                <table {...getTableProps()}>\n                    <thead className={classes.TableHeader}>\n                        {headerGroups.map((headerGroup: any) => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map((column: any) => (\n                                    <th width={column.width} {...column.getHeaderProps()} className={classes.TableHeader}>\n                                        {column.render('Header')}\n                                    </th>\n                                ))}\n                            </tr>\n                        ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                        {page.map((row: Row<object>, indx: number) => {\n                            prepareRow(row);\n                            return (\n                                <tr\n                                    {...row.getRowProps()}\n                                    className={\n                                         indx % 2 === 0\n                                            ? classes.TableRowEven\n                                            : classes.TableRow\n                                    }\n                                >\n                                    {row.cells.map((cell, indx) => {\n                                        return (\n                                            <td {...cell.getCellProps()} className={classes.TableCell}>\n                                                {cell.render('Cell')}\n                                            </td>\n                                        );\n                                    })}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n             { pageCount>1 &&\n                <div className={classes.TablePagination}>\n                    <button\n                        className={classes.PaginationButtonSpace}\n                        onClick={() => gotoPage(0)}\n                        disabled={!canPreviousPage}\n                    >\n                        {'<<'}\n                    </button>{' '}\n                    <button\n                        className={classes.PaginationButtonSpace}\n                        onClick={() => previousPage()}\n                        disabled={!canPreviousPage}\n                    >\n                        {'<'}\n                    </button>{' '}\n                    <button className={classes.PaginationButtonSpace} onClick={() => nextPage()} disabled={!canNextPage}>\n                        {'>'}\n                    </button>{' '}\n                    <button\n                        className={classes.PaginationButtonSpace}\n                        onClick={() => gotoPage(pageCount - 1)}\n                        disabled={!canNextPage}\n                    >\n                        {'>>'}\n                    </button>{' '}\n                    <span className={classes.PaginationButtonSpace}>\n                        Page{' '}\n                        <strong>\n                            {pageIndex + 1} of {pageOptions.length}\n                        </strong>{' '}\n                    </span>\n                    <span>\n                        | Go to page:{' '}\n                        <input\n                            type=\"number\"\n                            defaultValue={pageIndex + 1}\n                            onChange={(e) => {\n                                const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                                gotoPage(page);\n                            }}\n                            style={{ width: '100px' }}\n                        />\n                    </span>{' '}\n                    <select\n                        value={pageSize}\n                        onChange={(e) => {\n                            setPageSize(Number(e.target.value));\n                        }}\n                        className={classes.PaginationButtonSpace}\n                    >\n                        {[10, 20, 30, 40, 50].map((pageSize) => (\n                            <option key={pageSize} value={pageSize}>\n                                Show {pageSize}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            }\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}