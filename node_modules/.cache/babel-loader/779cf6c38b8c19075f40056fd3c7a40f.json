{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { InfoBox } from \"../Components/InfoBox/InfoBox\";\nimport { Table } from \"../Components/Table/Table\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport classes from \"./DataBuilder.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataBuilder = () => {\n  _s();\n\n  const [selectedDataIndex, setSelectedDataIndex] = React.useState(-1);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n  const prepareTableOverviewColumns = () => {\n    return [{\n      Header: () => \"Overview\",\n      id: \"axes-header\",\n      columns: [\"id\", \"title\"].map((th, idx) => {\n        return {\n          Header: th.toUpperCase(),\n          accessor: th\n        };\n      })\n    }];\n  };\n\n  const formatHeaderData = data => {\n    return data.map(entry => ({\n      id: entry.id,\n      title: entry.attributes.titles[0].title\n    }));\n  };\n\n  const getData = data => {\n    if (data && data.data && data.data.length > 0) return data.data;else return [];\n  };\n\n  const ccdData = getData(data);\n\n  const formatContentData = data => {\n    return {\n      \"Publication Year\": data[selectedDataIndex].attributes.publicationYear,\n      Publisher: data[selectedDataIndex].attributes.publisher,\n      Subjects: data[selectedDataIndex].attributes.subjects.map(val => val[\"subject\"]),\n      URL: data[selectedDataIndex].attributes.url\n    };\n  };\n\n  const prepareContentdata = data => {\n    if (selectedDataIndex > 0) {\n      const formattedData = formatContentData(data);\n      const detailsArray = [];\n\n      for (const [k, v] of Object.entries(formattedData)) {\n        detailsArray.push([k, v]);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: detailsArray.map(row => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [row[0], /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: Array.isArray(row[1]) ? row[1].map(val => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: val\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 42\n              }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                children: row[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this);\n    } else return \"\";\n  };\n\n  const handleTableRowClick = indx => {\n    setSelectedDataIndex(indx);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: ccdData.length > 0 && !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Conatiner,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Left,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: prepareTableOverviewColumns(),\n          data: formatHeaderData(ccdData),\n          selectedRow: 0,\n          pageIndexValue: 0,\n          pageSizeValue: 10,\n          onRowClick: handleTableRowClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Right,\n        children: /*#__PURE__*/_jsxDEV(InfoBox, {\n          children: prepareContentdata(ccdData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataBuilder, \"E2xlcPs+tVCK+uFgfQGMym4+w9I=\", false, function () {\n  return [useFetch];\n});\n\n_c = DataBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataBuilder\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx"],"names":["React","InfoBox","Table","Aux","useFetch","classes","DataBuilder","selectedDataIndex","setSelectedDataIndex","useState","data","loading","error","prepareTableOverviewColumns","Header","id","columns","map","th","idx","toUpperCase","accessor","formatHeaderData","entry","title","attributes","titles","getData","length","ccdData","formatContentData","publicationYear","Publisher","publisher","Subjects","subjects","val","URL","url","prepareContentdata","formattedData","detailsArray","k","v","Object","entries","push","row","Array","isArray","handleTableRowClick","indx","Conatiner","Left","Right"],"mappings":"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","sourcesContent":["\n\nimport React from \"react\";\nimport { Url } from \"url\";\nimport { InfoBox } from \"../Components/InfoBox/InfoBox\";\nimport { Table } from \"../Components/Table/Table\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport classes from \"./DataBuilder.module.css\"\n\n\nexport const DataBuilder = () => {\n\n  const [selectedDataIndex,setSelectedDataIndex] = React.useState(-1);\n\n  const {data,loading,error} =   useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n  \n  const prepareTableOverviewColumns = () => {\n        return [\n          {\n            Header: () => \"Overview\",\n            id: \"axes-header\",\n            columns: [\"id\", \"title\"].map((th, idx) => {\n              return {\n                Header: th.toUpperCase(),\n                accessor: th,\n              };\n            }),\n          },\n        ];\n      };\n\n      \n   const formatHeaderData = (data:any)=> {\n        return data.map((entry:any) => ({ id: entry.id, title: entry.attributes.titles[0].title}))\n   }\n\n   const getData = (data:any) : [] => {\n        if(data && data.data && data.data.length>0)\n          return data.data;\n        else\n          return [];  \n   }\n\n   const ccdData = getData(data);\n\n   const formatContentData= (data:any)   => {\n      return {\n      \"Publication Year\" : data[selectedDataIndex].attributes.publicationYear, \n      Publisher: data[selectedDataIndex].attributes.publisher,\n      Subjects: data[selectedDataIndex].attributes.subjects.map((val:any)=>val[\"subject\"]),\n      URL : data[selectedDataIndex].attributes.url}\n   }\n\n   const prepareContentdata = (data:any) => {\n     if(selectedDataIndex >0 )\n     {\n      const formattedData = formatContentData(data);\n      const detailsArray : any [] =[];\n      for (const [k, v] of Object.entries(formattedData)) {\n        detailsArray.push([k,v]);\n      }\n      return (\n      <ul>\n        {\n            detailsArray.map((row) => {\n              return (\n              <li>\n                {row[0]}\n                <ul>\n                    { Array.isArray(row[1])\n                       ? row[1].map(val=><li>{val}</li>) \n                       : <li>{row[1]}</li>}\n                </ul>\n              </li> )\n            })\n        }\n      </ul>)\n     }\n     else\n     return \"\";\n    \n   }\n      \n   const handleTableRowClick = (indx:number) => {\n    setSelectedDataIndex(indx);\n   }\n    return (\n        <Aux>\n            {ccdData.length>0 && !loading  \n            ? \n            <div className= {classes.Conatiner}>\n                <div className = {classes.Left} > \n                    <Table \n                      columns={prepareTableOverviewColumns()} \n                      data={formatHeaderData(ccdData)} \n                      selectedRow={0} \n                      pageIndexValue ={0} \n                      pageSizeValue={10} \n                      onRowClick={handleTableRowClick}\n                      /> \n                </div> \n                <div className = {classes.Right} >\n                <InfoBox>{prepareContentdata(ccdData)}</InfoBox>\n                      \n                </div>   \n            </div>\n            : \"\" }\n        </Aux>\n        )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}