{"version":3,"sources":["pages/Display/ContractDisplay.module.css","Framework/Header/Header.module.css","Components/ParagraphComponent/ParagraphComponent.module.css","pages/Display/ContractParagraphDisplay.module.css","Framework/Header/Header.tsx","Layout/Layout.tsx","pages/Form/ContractIDForm.tsx","hooks/useFetch.ts","Components/ParagraphComponent/ParagraphComponent.tsx","pages/Display/ContractParagraphDisplay.tsx","pages/Display/ContractDisplay.tsx","App.tsx","reportWebVitals.ts","index.tsx","pages/Form/ContractIDForm.module.css"],"names":["module","exports","header","headerName","className","classes","Header","Layout","history","children","React","useState","setHeaderName","cloneElement","ContractIDForm","contractID","useHistory","useEffect","fullscreenDiv","onSubmit","e","preventDefault","appendPath","push","center","padding","htmlFor","type","name","textbox","value","disabled","button","useFetch","apiUrl","data","setData","loading","setLoading","undefined","error","setError","fetch","then","res","ok","Error","statusText","json","catch","err","ParagraphComponent","props","Content","content","ContractParagraphDisplay","paragraphURL","paragraphData","setParagraphData","paragraphNumber","setParagraphNumber","componentRef","useRef","handleResize","fillParagraphsOnEmptySpace","handleScroll","current","Math","abs","getBoundingClientRect","bottom","window","innerHeight","prev","addEventListener","removeEventListener","scrollHeight","Object","keys","length","prevState","ref","data-testid","map","val","attributes","text","ContractDisplay","id","useParams","Loader","ContainerText","toString","AppRoute","exact","path","render","routeProps","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d487bd4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContractDisplay_Container__sIF7T\",\"fullscreenDiv\":\"ContractDisplay_fullscreenDiv__14wfy\",\"ContainerText\":\"ContractDisplay_ContainerText__1FhH_\",\"Loader\":\"ContractDisplay_Loader__xk6Vd\",\"spin\":\"ContractDisplay_spin__1sCTr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1wSAE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"ParagraphComponent_Content__9cJdh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullscreenDiv\":\"ContractParagraphDisplay_fullscreenDiv__2T8EJ\"};","import classes from './Header.module.css';\n//Header function component\nconst header = ({headerName}:{headerName:string}) => {\n    return <header className={classes.Header}>\n            {headerName}\n            </header>;\n};\nexport default header;\n","import React from 'react';\nimport Header from '../Framework/Header/Header';\n\n//Layout function component\nconst Layout = ({ history,children }: { history?: History,children:any },) => {\n    const [headerName,setHeaderName] = React.useState(\"Contract Viewer\");\n    return (\n        <>\n            {<Header headerName= {headerName}/>}\n            {React.cloneElement(children, {setHeaderName, history })}\n        </>\n    );\n\n};\nexport default Layout;\n","import React from \"react\";\nimport classes from \"./ContractIDForm.module.css\"\n//import { History } from \"history\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const ContractIDForm = ({setHeaderName }: {setHeaderName?: (val:string)=>void}) => {\n      const [contractID] = React.useState(\"dc89ff49-8449-11e7-ac1d-3c52820efd20\");\n      const history = useHistory();\n      React.useEffect(()=> {\n        if(!setHeaderName)\n         return;\n        setHeaderName(\"Contract Viewer\");\n    },[setHeaderName])\n\n    \n      \n    \n      const onSubmit = (e:any) => {\n        e.preventDefault();\n        if(history) {\n          let appendPath = `/contracts/${contractID}`\n          history.push(appendPath)\n        }\n      }\n     \n    \n        return (\n          <div className={classes.fullscreenDiv} >\n          <form onSubmit={onSubmit}>\n            <div className={classes.center}>\n              <label className={classes.padding} htmlFor=\"contractid\"> Contract ID\n              </label>\n              <input type=\"text\" name= \"contractid\" className={classes.textbox} value={contractID} disabled={true}/>\n              <input type=\"submit\" className={classes.button} value=\"Submit\"  />\n           </div>\n          </form>\n          \n          </div>\n        );\n\n}","import { useEffect, useState } from 'react';\n\n//Custom hook for fetch\nexport const useFetch = (apiUrl: string) => {\n    const [data, setData] = useState<any>({});\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState<any>(undefined);\n    useEffect(() => {\n        setLoading(true);\n        try {\n            fetch(apiUrl)\n                .then((res) => {\n                    if (!res.ok) throw Error(res.statusText);\n                    return res.json()\n                })\n                .then((data) => {\n                    setData(data);\n                    setLoading(false);\n                }).catch(error => {\n                    setError(error);\n                    setLoading(false);\n                });\n        } catch (err) {\n            setError(err);\n            setLoading(false);\n        }\n       \n    }, [apiUrl]);\n\n    return { data, loading, error };\n};\n\n\n","import classes from './ParagraphComponent.module.css';\n\n// Generic function component to display contents \n const ParagraphComponent = (props: any) => (\n        <div className={classes.Content}>{props.content}</div>\n);\nexport default ParagraphComponent;\n\n","import React, { useState } from 'react';\nimport  ParagraphComponent  from '../../Components/ParagraphComponent/ParagraphComponent';\nimport { useFetch } from '../../hooks/useFetch';\n//import Wrapper from '../../utils/Wrapper';\nimport classes from './ContractParagraphDisplay.module.css';\n\n\n const ContractParagraphDisplay = ({paragraphURL} : {paragraphURL: string}) => {\n    const [paragraphData, setParagraphData] = useState<any>([]);\n    const [paragraphNumber,setParagraphNumber] = React.useState(1);\n    const baseURL = \"http://localhost:3000\"\n    const componentRef = React.useRef<HTMLDivElement>(null);\n   \n    \n    const {data,loading,error} = useFetch(`${baseURL}${paragraphURL}?page=${paragraphNumber}&pageSize=50`) \n   \n    React.useEffect(()=> {\n        \n        const handleResize = () => {\n            fillParagraphsOnEmptySpace()\n        }\n        const handleScroll = () => {\n            // Check whether end of the document reached\n           if(componentRef.current && Math.abs(componentRef.current.getBoundingClientRect().bottom-window.innerHeight)<100)\n              setParagraphNumber((prev)=>prev+1);\n        }\n        window.addEventListener('scroll', handleScroll,true);\n        window.addEventListener(\"resize\", handleResize);\n\n        //Clean up\n        return(()=> {\n            window.removeEventListener('scroll',handleScroll,true);\n            window.removeEventListener(\"resize\", handleResize);\n        })\n    },[])\n\n    const fillParagraphsOnEmptySpace = () => {\n        //fetch paragraphs until the display window displays scroll bar\n        if(componentRef.current && window.innerHeight > componentRef.current.scrollHeight)\n           setParagraphNumber(prev=>prev+1);\n   }\n    \n    React.useEffect(()=> {\n        if(loading || error)\n          return;\n        if(Object.keys(data).length!==0 && \"data\" in data)\n          setParagraphData((prevState:any) => [...prevState, data] );\n    },[data, loading,error])\n     \n   \n    React.useEffect(()=> {\n        if(paragraphData.length ===0)\n            return;\n        fillParagraphsOnEmptySpace();\n    },[paragraphData])\n\n    \n    \n    return (\n            <div className={classes.fullscreenDiv} ref = {componentRef} data-testid=\"contract-paragraphs\">\n                {paragraphData.map((val:any) => \n                    <ParagraphComponent content={val.data.attributes.text?val.data.attributes.text:\"\"}/>\n                )}\n            </div>\n    );\n};\n\nexport default ContractParagraphDisplay;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks/useFetch';\n//import Wrapper from '../../utils/Wrapper';\nimport classes from './ContractDisplay.module.css';\nimport ContractParagraphDisplay from './ContractParagraphDisplay';\n\n\n  export const ContractDisplay = ({setHeaderName} : {setHeaderName?: (val:string)=>void}) => {\n    const { id } = useParams<{ id: string }>();\n    const baseURL = \"http://localhost:3000\"\n\n   const {data,loading,error} = useFetch(`${baseURL}/contracts/${id}`) \n\n       React.useEffect(() => {\n        if(data && (Object.keys(data).length>0) && setHeaderName)\n             setHeaderName(data.data.attributes[\"name\"]);\n      },[data, setHeaderName])\n  \n    return (\n            <div className={classes.fullscreenDiv} data-testid=\"contract-display\">\n                { loading ? (\n                        <>\n                            <div className={classes.Loader} />\n                            <div className={classes.ContainerText}>Loading</div>\n                        </>)\n                    : error \n                        ? `Error! ${error.toString()}`\n                         :  <ContractParagraphDisplay paragraphURL={`/contracts/${id}/paragraphs`}/> \n                }\n            </div>\n          );\n};\n\n","import React from 'react';\nimport './App.css';\nimport Layout from './Layout/Layout';\nimport {\n    BrowserRouter as Router, Route, Switch,\n  } from \"react-router-dom\";\nimport { ContractIDForm } from './pages/Form/ContractIDForm';\nimport { ContractDisplay } from './pages/Display/ContractDisplay';\n\ninterface RouteProps {\n    path: string;\n    children: React.ReactElement;\n}  \nconst AppRoute = (props: RouteProps) => {\n    return  (\n      <Route\n        exact\n        path={props.path}\n        render={(routeProps) =>\n          React.cloneElement(props.children, { ...routeProps })\n        }\n      />\n    ) \n};\nfunction App() {\n    return (\n        <Router>  \n            <Switch>\n                <AppRoute path=\"/contracts/:id\">\n                    <Layout>\n                        <ContractDisplay/>\n                    </Layout>\n                </AppRoute>\n                <AppRoute path=\"/contract-viewer-app\">\n                    <Layout>\n                        <ContractIDForm />\n                    </Layout>\n                </AppRoute>\n            </Switch>\n        </Router>\n    );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./mock-server\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullscreenDiv\":\"ContractIDForm_fullscreenDiv__ro1VE\",\"center\":\"ContractIDForm_center__1qHTE\",\"padding\":\"ContractIDForm_padding__238JS\",\"textbox\":\"ContractIDForm_textbox__2_s-g\",\"label\":\"ContractIDForm_label__1bxY1\",\"button\":\"ContractIDForm_button__1KJxT\"};"],"sourceRoot":""}