{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/FEATURE_SPACE/FeatureSpace_Demo/feature-space-app/src/pages/DataBuilder/DataBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { InfoBox } from '../../Components/InfoBox/InfoBox';\nimport { Table } from '../../Components/Table/Table';\nimport { useFetch } from '../../hooks/useFetch';\nimport Wrapper from '../../utils/Wrapper';\nimport classes from './DataBuilder.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DataBuilder = () => {\n  _s();\n\n  const [selectedDataIndex, setSelectedDataIndex] = React.useState(0);\n  const params = useParams(); //Custom hook to fetch data\n\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n  const getData = data => {\n    if (data && data.data && data.data.length > 0) return data.data;else return [];\n  };\n\n  const ccdData = React.useMemo(() => getData(data), [data]); //Create table structure\n\n  const prepareSummaryTableColumns = () => {\n    return [{\n      Header: () => 'Summary',\n      id: 'axes-header',\n      columns: ['id', 'title'].map((th, idx) => {\n        return {\n          Header: idx === 0 ? th.toUpperCase() : th.charAt(0).toUpperCase() + th.slice(1),\n          accessor: th\n        };\n      })\n    }];\n  }; //Fomat data to display as summary\n\n\n  const formatSummaryData = data => {\n    return data.map(entry => ({\n      id: entry.id,\n      title: entry.attributes.titles[0].title\n    }));\n  }; //Format data to display as content\n\n\n  const formatContentData = data => {\n    return {\n      'Publication Year': data[selectedDataIndex].attributes.publicationYear,\n      Publisher: data[selectedDataIndex].attributes.publisher,\n      Subjects: data[selectedDataIndex].attributes.subjects.map(val => val['subject']),\n      URL: data[selectedDataIndex].attributes.url\n    };\n  }; //Create content\n\n\n  const prepareContent = data => {\n    if (selectedDataIndex >= 0) {\n      const formattedData = formatContentData(data);\n      const detailsArray = [];\n\n      for (const [k, v] of Object.entries(formattedData)) {\n        detailsArray.push([k, v]);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: detailsArray.map((row, indx) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [row[0], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: Array.isArray(row[1]) ? row[1].map((val, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: val\n              }, val + i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 64\n              }, this)) : indx === detailsArray.length - 1 ? /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: row[1],\n                  children: row[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n                children: row[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)]\n          }, indx.toString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    } else return '';\n  }; //Handle selection in summary table\n\n\n  const handleTableRowClick = indx => {\n    setSelectedDataIndex(indx);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Loader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.ContainerText,\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : ccdData.length > 0 ? Object.keys(error).length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Error while fetching data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Conatiner,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Left,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: prepareSummaryTableColumns(),\n          data: formatSummaryData(ccdData),\n          selectedRow: 0,\n          pageIndexValue: 0,\n          pageSizeValue: 20,\n          onRowClick: handleTableRowClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Right,\n        children: /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: 'Details',\n          children: prepareContent(ccdData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataBuilder, \"JgF55zsVhO6km0//CpPkFirl/jk=\", true, function () {\n  return [useFetch];\n});\n\n_c = DataBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataBuilder\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/FEATURE_SPACE/FeatureSpace_Demo/feature-space-app/src/pages/DataBuilder/DataBuilder.tsx"],"names":["React","InfoBox","Table","useFetch","Wrapper","classes","DataBuilder","selectedDataIndex","setSelectedDataIndex","useState","params","useParams","data","loading","error","getData","length","ccdData","useMemo","prepareSummaryTableColumns","Header","id","columns","map","th","idx","toUpperCase","charAt","slice","accessor","formatSummaryData","entry","title","attributes","titles","formatContentData","publicationYear","Publisher","publisher","Subjects","subjects","val","URL","url","prepareContent","formattedData","detailsArray","k","v","Object","entries","push","row","indx","Array","isArray","i","toString","handleTableRowClick","Loader","ContainerText","keys","Conatiner","Left","Right"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { InfoBox } from '../../Components/InfoBox/InfoBox';\nimport { Table } from '../../Components/Table/Table';\nimport { useFetch } from '../../hooks/useFetch';\nimport Wrapper from '../../utils/Wrapper';\nimport classes from './DataBuilder.module.css';\n\nexport const DataBuilder = () => {\n    const [selectedDataIndex, setSelectedDataIndex] = React.useState(0);\n\n    const params = useParams();\n    //Custom hook to fetch data\n    const { data, loading, error } = useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n    const getData = (data: any): [] => {\n        if (data && data.data && data.data.length > 0) return data.data;\n        else return [];\n    };\n\n    const ccdData = React.useMemo(() => getData(data), [data]);\n\n    //Create table structure\n    const prepareSummaryTableColumns = () => {\n        return [\n            {\n                Header: () => 'Summary',\n                id: 'axes-header',\n                columns: ['id', 'title'].map((th, idx) => {\n                    return {\n                        Header: idx === 0 ? th.toUpperCase() : th.charAt(0).toUpperCase() + th.slice(1),\n                        accessor: th,\n                    };\n                }),\n            },\n        ];\n    };\n\n    //Fomat data to display as summary\n    const formatSummaryData = (data: any) => {\n        return data.map((entry: any) => ({ id: entry.id, title: entry.attributes.titles[0].title }));\n    };\n\n    //Format data to display as content\n    const formatContentData = (data: any) => {\n        return {\n            'Publication Year': data[selectedDataIndex].attributes.publicationYear,\n            Publisher: data[selectedDataIndex].attributes.publisher,\n            Subjects: data[selectedDataIndex].attributes.subjects.map((val: any) => val['subject']),\n            URL: data[selectedDataIndex].attributes.url,\n        };\n    };\n\n    //Create content\n    const prepareContent = (data: any) => {\n        if (selectedDataIndex >= 0) {\n            const formattedData = formatContentData(data);\n            const detailsArray: any[] = [];\n            for (const [k, v] of Object.entries(formattedData)) {\n                detailsArray.push([k, v]);\n            }\n            return (\n                <ul>\n                    {detailsArray.map((row, indx) => {\n                        return (\n                            <li key={indx.toString()}>\n                                <h2>{row[0]} </h2>\n                                <ul>\n                                    {Array.isArray(row[1]) ? (\n                                        row[1].map((val, i) => <li key={val + i}>{val}</li>)\n                                    ) : indx === detailsArray.length - 1 ? (\n                                        <li>\n                                            <a href={row[1]}>{row[1]}</a>\n                                        </li>\n                                    ) : (\n                                        <li>{row[1]}</li>\n                                    )}\n                                </ul>\n                            </li>\n                        );\n                    })}\n                </ul>\n            );\n        } else return '';\n    };\n    //Handle selection in summary table\n    const handleTableRowClick = (indx: number) => {\n        setSelectedDataIndex(indx);\n    };\n\n    return (\n        <Wrapper>\n            {loading ? (\n                <>\n                    <div className={classes.Loader} />\n                    <div className={classes.ContainerText}>Loading</div>\n                </>\n            ) : ccdData.length > 0 ? (\n                Object.keys(error).length !== 0 ? (\n                    <div> Error while fetching data</div>\n                ) : (\n                    <div className={classes.Conatiner}>\n                        <div className={classes.Left}>\n                            <Table\n                                columns={prepareSummaryTableColumns()}\n                                data={formatSummaryData(ccdData)}\n                                selectedRow={0}\n                                pageIndexValue={0}\n                                pageSizeValue={20}\n                                onRowClick={handleTableRowClick}\n                            />\n                        </div>\n                        <div className={classes.Right}>\n                            <InfoBox title={'Details'}>{prepareContent(ccdData)}</InfoBox>\n                        </div>\n                    </div>\n                )\n            ) : (\n                ''\n            )}\n        </Wrapper>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}