{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataBuilder = () => {\n  _s();\n\n  const [fetchState, setFetchState] = React.useState({\n    loading: false,\n    data: undefined\n  });\n  React.useEffect(() => {\n    setFetchState({\n      loading: true,\n      data: undefined\n    });\n    const apiUrl = `https://api.test.datacite.org/dois?query=prefix:10.5517`;\n    fetch(apiUrl).then(res => res.json()).then(data => {\n      setFetchState({\n        data: data,\n        loading: false\n      });\n    });\n  }, [setFetchState]);\n\n  const List = data => {\n    if (!data || data.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No repos, sorry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 44\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"list-head\",\n        children: \"Available Public Repositories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), data.map(dataVal => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"repo-text\",\n            children: [repo.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"repo-description\",\n            children: repo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, dataVal.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !fetchState.loading ? /*#__PURE__*/_jsxDEV(List, {\n      data: fetchState.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 31\n    }, this) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataBuilder, \"/bHvj9qe0gp+naQyvnXizb4PUbs=\");\n\n_c = DataBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataBuilder\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx"],"names":["React","DataBuilder","fetchState","setFetchState","useState","loading","data","undefined","useEffect","apiUrl","fetch","then","res","json","List","length","map","dataVal","repo","name","description","id"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAE9B,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BH,KAAK,CAACI,QAAN,CAAe;AAACC,IAAAA,OAAO,EAAC,KAAT;AAAeC,IAAAA,IAAI,EAACC;AAApB,GAAf,CAAnC;AAEAP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACrBL,IAAAA,aAAa,CAAC;AAACE,MAAAA,OAAO,EAAC,IAAT;AAAcC,MAAAA,IAAI,EAACC;AAAnB,KAAD,CAAb;AACA,UAAME,MAAM,GAAI,yDAAhB;AACAC,IAAAA,KAAK,CAACD,MAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESL,IAAD,IAAU;AACdH,MAAAA,aAAa,CAAC;AAACG,QAAAA,IAAI,EAACA,IAAN;AAAWD,QAAAA,OAAO,EAAC;AAAnB,OAAD,CAAb;AACD,KAJH;AAKD,GARA,EAQE,CAACF,aAAD,CARF;;AAUD,QAAMW,IAAI,GAAIR,IAAD,IAAa;AACxB,QAAI,CAACA,IAAD,IAASA,IAAI,CAACS,MAAL,KAAgB,CAA7B,EAAgC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAChC,wBACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGT,IAAI,CAACU,GAAL,CAAUC,OAAD,IAAa;AACrB,4BACE;AAAqB,UAAA,SAAS,EAAC,MAA/B;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,WAAhB;AAAA,uBAA6BC,IAAI,CAACC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,kBAAhB;AAAA,sBAAoCD,IAAI,CAACE;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAASH,OAAO,CAACI,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OAPA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAfD;;AAkBE,sBACI;AAAA,cACC,CAACnB,UAAU,CAACG,OAAZ,gBAAqB,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEH,UAAU,CAACI;AAAvB;AAAA;AAAA;AAAA;AAAA,YAArB,GAAoD;AADrD;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArCM;;GAAML,W;;KAAAA,W","sourcesContent":["\nimport React from \"react\";\n\nexport const DataBuilder = () => {\n\n   const [fetchState,setFetchState] = React.useState({loading:false,data:undefined});\n\n   React.useEffect(() => {\n    setFetchState({loading:true,data:undefined});\n    const apiUrl = `https://api.test.datacite.org/dois?query=prefix:10.5517`;\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((data) => {\n        setFetchState({data:data,loading:false});\n      });\n  }, [setFetchState]);\n\n  const List = (data:[]) => {\n    if (!data || data.length === 0) return <p>No repos, sorry</p>;\n    return (\n      <ul>\n        <h2 className='list-head'>Available Public Repositories</h2>\n        {data.map((dataVal) => {\n          return (\n            <li key={dataVal.id} className='list'>\n              <span className='repo-text'>{repo.name} </span>\n              <span className='repo-description'>{repo.description}</span>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n\n    return (\n        <div>\n        {!fetchState.loading? <List data={fetchState.data}/>:\"\"}\n        </div>\n        )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}