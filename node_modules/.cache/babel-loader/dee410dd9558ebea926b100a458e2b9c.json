{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/Components/Table.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTable, usePagination } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Table = ({\n  columns,\n  data\n}) => {\n  _s();\n\n  const {\n    // Table - instance properties:\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    // Pagination - instance properties:\n    // @ts-ignore\n    page,\n    // Instead of using `rows`, we'll use `page`, which has only the rows for the active page\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    // Final state object of table:\n    state: {\n      pageIndex,\n      pageSize\n    } // @ts-ignore\n\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 2\n    }\n  }, usePagination); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"classes.TablePagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(pageCount - 1),\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Table, \"3/Iefi9W1ksa/Wnb66agzNfj8Fc=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/Components/Table.tsx"],"names":["React","useTable","usePagination","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAkBC,aAAlB,QAA4C,aAA5C;;;AAGA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAgD;AAAA;;AACjE,QAAM;AACF;AACAC,IAAAA,aAFE;AAGFC,IAAAA,iBAHE;AAIFC,IAAAA,YAJE;AAKFC,IAAAA,UALE;AAKU;AACZ;AACAC,IAAAA,IAPE;AAOI;AACNC,IAAAA,eARE;AASFC,IAAAA,WATE;AAUFC,IAAAA,WAVE;AAWFC,IAAAA,SAXE;AAYFC,IAAAA,QAZE;AAaFC,IAAAA,QAbE;AAcFC,IAAAA,YAdE;AAeFC,IAAAA,WAfE;AAgBF;AACAC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAjBL,CAkBF;;AAlBE,MAmBApB,QAAQ,CAAC;AACbG,IAAAA,OADa;AAEbC,IAAAA,IAFa;AAGbiB,IAAAA,YAAY,EAAE;AAAEF,MAAAA,SAAS,EAAE;AAAb;AAHD,GAAD,EAIZlB,aAJY,CAnBd,CADiE,CA0BjE;;AACA,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAE,yBAAhB;AAAA,8BACA;AAAQ,QAAA,OAAO,EAAE,MAAMa,QAAQ,CAAC,CAAD,CAA/B;AAAoC,QAAA,QAAQ,EAAE,CAACJ,eAA/C;AAAA,kBACK;AADL;AAAA;AAAA;AAAA;AAAA,cADA,EAGU,GAHV,eAIA;AAAQ,QAAA,OAAO,EAAE,MAAMM,YAAY,EAAnC;AAAuC,QAAA,QAAQ,EAAE,CAACN,eAAlD;AAAA,kBACK;AADL;AAAA;AAAA;AAAA;AAAA,cAJA,EAMU,GANV,eAOA;AAAQ,QAAA,OAAO,EAAE,MAAMK,QAAQ,EAA/B;AAAmC,QAAA,QAAQ,EAAE,CAACJ,WAA9C;AAAA,kBACK;AADL;AAAA;AAAA;AAAA;AAAA,cAPA,EASU,GATV,eAUA;AAAQ,QAAA,OAAO,EAAE,MAAMG,QAAQ,CAACD,SAAS,GAAG,CAAb,CAA/B;AAAgD,QAAA,QAAQ,EAAE,CAACF,WAA3D;AAAA,kBACK;AADL;AAAA;AAAA;AAAA;AAAA,cAVA,EAYU,GAZV;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAyBA,CApDG;;GAAMT,K;UAoBHF,Q;;;KApBGE,K","sourcesContent":["import React from \"react\";\nimport { useTable,usePagination, Row } from \"react-table\";\nimport classes from './Table.module.css';\n\nexport const Table = ({ columns, data }: {columns:any,data:any}) =>  {\n    const {\n        // Table - instance properties:\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow, // Pagination - instance properties:\n        // @ts-ignore\n        page, // Instead of using `rows`, we'll use `page`, which has only the rows for the active page\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        // Final state object of table:\n        state: { pageIndex, pageSize },\n        // @ts-ignore\n      } = useTable({\n      columns,\n      data,\n      initialState: { pageIndex: 2 }\n    },usePagination)\n   \n    // Render the UI for your table\n    return  (\n        <>\n        <div className= \"classes.TablePagination\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n            {'<<'}\n        </button>{' '}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n            {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n            {'>'}\n        </button>{' '}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n            {'>>'}\n        </button>{' '}\n       \n        </div>\n        \n         {/* from https://react-table.tanstack.com/docs/examples/pagination\n        Pagination can be built however you'd like. \n        This is just a very basic UI implementation:\n      */}\n        \n        </>\n      );\n   }\n   "]},"metadata":{},"sourceType":"module"}