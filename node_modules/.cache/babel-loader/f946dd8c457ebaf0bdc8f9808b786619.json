{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/Components/Table.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTable, usePagination } from \"react-table\";\nimport classes from './Table.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Table = ({\n  columns,\n  data,\n  selectedRow,\n  pageIndexValue,\n  pageSizeValue,\n  onRowClick\n}) => {\n  _s();\n\n  const {\n    // Table - instance properties:\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    // Pagination - instance properties:\n    // @ts-ignore\n    page,\n    // Instead of using `rows`, we'll use `page`, which has only the rows for the active page\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    // Final state object of table:\n    state: {\n      pageIndex,\n      pageSize\n    } // @ts-ignore\n\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 2\n    }\n  }, usePagination);\n  const [tableSelectedRow, setSelectedRow] = React.useState(selectedRow); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Table,\n      children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n              className: classes.TableHeader,\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: page.map((row, indx) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              onClick: () => {\n                setSelectedRow(indx);\n                console.log();\n                onRowClick(indx);\n              },\n              className: indx === tableSelectedRow ? classes.TableRowSelection : indx % 2 === 0 ? classes.TableRowEven : classes.TableRow,\n              children: row.cells.map((cell, indx) => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  className: classes.TableCell,\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.TablePagination,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.PaginationButtonSpace,\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.PaginationButtonSpace,\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.PaginationButtonSpace,\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.PaginationButtonSpace,\n        onClick: () => gotoPage(pageCount - 1),\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.PaginationButtonSpace,\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"| Go to page:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: pageIndex + 1,\n          onChange: e => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(page);\n          },\n          style: {\n            width: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pageSize,\n        onChange: e => {\n          setPageSize(Number(e.target.value));\n        },\n        className: classes.PaginationButtonSpace,\n        children: [10, 20, 30, 40, 50].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pageSize,\n          children: [\"Show \", pageSize]\n        }, pageSize, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Table, \"FCpc1flGpiqkjZkAipzACYHPTFw=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/Components/Table.tsx"],"names":["React","useTable","usePagination","classes","Table","columns","data","selectedRow","pageIndexValue","pageSizeValue","onRowClick","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","tableSelectedRow","setSelectedRow","useState","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","TableHeader","render","row","indx","getRowProps","console","log","TableRowSelection","TableRowEven","TableRow","cells","cell","getCellProps","TableCell","TablePagination","PaginationButtonSpace","length","e","target","value","Number","width"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAkBC,aAAlB,QAA4C,aAA5C;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA,WAAjB;AAA6BC,EAAAA,cAA7B;AAA4CC,EAAAA,aAA5C;AAA2DC,EAAAA;AAA3D,CAAD,KAAmM;AAAA;;AACpN,QAAM;AACF;AACAC,IAAAA,aAFE;AAGFC,IAAAA,iBAHE;AAIFC,IAAAA,YAJE;AAKFC,IAAAA,UALE;AAKU;AACZ;AACAC,IAAAA,IAPE;AAOI;AACNC,IAAAA,eARE;AASFC,IAAAA,WATE;AAUFC,IAAAA,WAVE;AAWFC,IAAAA,SAXE;AAYFC,IAAAA,QAZE;AAaFC,IAAAA,QAbE;AAcFC,IAAAA,YAdE;AAeFC,IAAAA,WAfE;AAgBF;AACAC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAjBL,CAkBF;;AAlBE,MAmBAzB,QAAQ,CAAC;AACbI,IAAAA,OADa;AAEbC,IAAAA,IAFa;AAGbqB,IAAAA,YAAY,EAAE;AAAEF,MAAAA,SAAS,EAAE;AAAb;AAHD,GAAD,EAIZvB,aAJY,CAnBd;AA2BA,QAAM,CAAC0B,gBAAD,EAAkBC,cAAlB,IAAoC7B,KAAK,CAAC8B,QAAN,CAAevB,WAAf,CAA1C,CA5BoN,CA8BpN;;AACA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAGJ,OAAO,CAACC,KAAzB;AAAA,6BACI,sBAAWO,aAAa,EAAxB;AAAA,gCACA;AAAA,oBACKE,YAAY,CAACkB,GAAb,CAAkBC,WAAD,iBAClB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,sBACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACzB,mBACQA,MAAM,CAACC,cAAP,EADR;AAEI,cAAA,SAAS,EAAIjC,OAAO,CAACkC,WAFzB;AAAA,wBAIKF,MAAM,CAACG,MAAP,CAAc,QAAd;AAJL;AAAA;AAAA;AAAA;AAAA,oBADC;AADL;AAAA;AAAA;AAAA;AAAA,kBADC;AADL;AAAA;AAAA;AAAA;AAAA,gBADA,eAeA,sBAAW1B,iBAAiB,EAA5B;AAAA,oBACKG,IAAI,CAACgB,GAAL,CAAS,CAACQ,GAAD,EAAkBC,IAAlB,KAAmC;AAC7C1B,YAAAA,UAAU,CAACyB,GAAD,CAAV;AACA,gCACI,mBAAQA,GAAG,CAACE,WAAJ,EAAR;AAA4B,cAAA,OAAO,EAAE,MAAM;AAC1CZ,gBAAAA,cAAc,CAACW,IAAD,CAAd;AACAE,gBAAAA,OAAO,CAACC,GAAR;AACAjC,gBAAAA,UAAU,CAAC8B,IAAD,CAAV;AACA,eAJD;AAKA,cAAA,SAAS,EAAIA,IAAI,KAAGZ,gBAAP,GACEzB,OAAO,CAACyC,iBADV,GAEEJ,IAAI,GAAC,CAAL,KAAS,CAAT,GACArC,OAAO,CAAC0C,YADR,GAEA1C,OAAO,CAAC2C,QATvB;AAAA,wBAUCP,GAAG,CAACQ,KAAJ,CAAUhB,GAAV,CAAc,CAACiB,IAAD,EAAMR,IAAN,KAAe;AAC1B,oCACA,mBACQQ,IAAI,CAACC,YAAL,EADR;AAEI,kBAAA,SAAS,EAAI9C,OAAO,CAAC+C,SAFzB;AAAA,4BAIKF,IAAI,CAACV,MAAL,CAAY,MAAZ;AAJL;AAAA;AAAA;AAAA;AAAA,wBADA;AAQH,eATA;AAVD;AAAA;AAAA;AAAA;AAAA,oBADJ;AAuBC,WAzBA;AADL;AAAA;AAAA;AAAA;AAAA,gBAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAmDA;AAAK,MAAA,SAAS,EAAGnC,OAAO,CAACgD,eAAzB;AAAA,8BACA;AAAQ,QAAA,SAAS,EAAIhD,OAAO,CAACiD,qBAA7B;AAAoD,QAAA,OAAO,EAAE,MAAMhC,QAAQ,CAAC,CAAD,CAA3E;AAAgF,QAAA,QAAQ,EAAE,CAACJ,eAA3F;AAAA,kBACK;AADL;AAAA;AAAA;AAAA;AAAA,cADA,EAGU,GAHV,eAIA;AAAQ,QAAA,SAAS,EAAIb,OAAO,CAACiD,qBAA7B;AAAoD,QAAA,OAAO,EAAE,MAAM9B,YAAY,EAA/E;AAAmF,QAAA,QAAQ,EAAE,CAACN,eAA9F;AAAA,kBACK;AADL;AAAA;AAAA;AAAA;AAAA,cAJA,EAMU,GANV,eAOA;AAAQ,QAAA,SAAS,EAAIb,OAAO,CAACiD,qBAA7B;AAAoD,QAAA,OAAO,EAAE,MAAM/B,QAAQ,EAA3E;AAA+E,QAAA,QAAQ,EAAE,CAACJ,WAA1F;AAAA,kBACK;AADL;AAAA;AAAA;AAAA;AAAA,cAPA,EASU,GATV,eAUA;AAAQ,QAAA,SAAS,EAAId,OAAO,CAACiD,qBAA7B;AAAoD,QAAA,OAAO,EAAE,MAAMhC,QAAQ,CAACD,SAAS,GAAG,CAAb,CAA3E;AAA4F,QAAA,QAAQ,EAAE,CAACF,WAAvG;AAAA,kBACK;AADL;AAAA;AAAA;AAAA;AAAA,cAVA,EAYU,GAZV,eAaA;AAAM,QAAA,SAAS,EAAId,OAAO,CAACiD,qBAA3B;AAAA,2BACS,GADT,eAEI;AAAA,qBACC3B,SAAS,GAAG,CADb,UACoBP,WAAW,CAACmC,MADhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAIc,GAJd;AAAA;AAAA;AAAA;AAAA;AAAA,cAbA,eAmBA;AAAA,oCACkB,GADlB,eAEI;AACA,UAAA,IAAI,EAAC,QADL;AAEA,UAAA,YAAY,EAAE5B,SAAS,GAAG,CAF1B;AAGA,UAAA,QAAQ,EAAE6B,CAAC,IAAI;AACX,kBAAMvC,IAAI,GAAGuC,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiBC,MAAM,CAACH,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN,GAAyB,CAA1C,GAA8C,CAA3D;AACApC,YAAAA,QAAQ,CAACL,IAAD,CAAR;AACH,WAND;AAOA,UAAA,KAAK,EAAE;AAAE2C,YAAAA,KAAK,EAAE;AAAT;AAPP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBA,EA8BQ,GA9BR,eA+BA;AACI,QAAA,KAAK,EAAEhC,QADX;AAEI,QAAA,QAAQ,EAAE4B,CAAC,IAAI;AACf/B,UAAAA,WAAW,CAACkC,MAAM,CAACH,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CAAX;AACC,SAJL;AAKI,QAAA,SAAS,EAAIrD,OAAO,CAACiD,qBALzB;AAAA,kBAOK,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqBrB,GAArB,CAAyBL,QAAQ,iBAClC;AAAuB,UAAA,KAAK,EAAEA,QAA9B;AAAA,8BACUA,QADV;AAAA,WAAaA,QAAb;AAAA;AAAA;AAAA;AAAA,gBADC;AAPL;AAAA;AAAA;AAAA;AAAA,cA/BA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnDA;AAAA,kBADJ;AAoGA,CAnIG;;GAAMtB,K;UAoBHH,Q;;;KApBGG,K","sourcesContent":["import React from \"react\";\nimport { useTable,usePagination, Row } from \"react-table\";\nimport classes from './Table.module.css';\n\nexport const Table = ({ columns, data ,selectedRow,pageIndexValue,pageSizeValue, onRowClick}: {columns:any,data:any,selectedRow:number,pageIndexValue:number,pageSizeValue:number,onRowClick: (indx:number)=>void}) =>  {\n    const {\n        // Table - instance properties:\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow, // Pagination - instance properties:\n        // @ts-ignore\n        page, // Instead of using `rows`, we'll use `page`, which has only the rows for the active page\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        // Final state object of table:\n        state: { pageIndex, pageSize },\n        // @ts-ignore\n      } = useTable({\n      columns,\n      data,\n      initialState: { pageIndex: 2 }\n    },usePagination)\n   \n    \n    \n    const [tableSelectedRow,setSelectedRow] = React.useState(selectedRow);\n\n    // Render the UI for your table\n    return  (\n        <>\n        <div className= {classes.Table}>\n            <table {...getTableProps()} >\n            <thead>\n                {headerGroups.map((headerGroup:any) => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map((column:any) => (\n                    <th\n                        {...column.getHeaderProps()}\n                        className = {classes.TableHeader}\n                    >\n                        {column.render('Header')}\n                    </th>\n                    ))}\n                </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {page.map((row: Row<object>,indx: number) => {\n                prepareRow(row)\n                return (\n                    <tr {...row.getRowProps()}  onClick={() => {\n                     setSelectedRow(indx);\n                     console.log()\n                     onRowClick(indx)\n                    }} \n                    className= { indx===tableSelectedRow\n                                 ? classes.TableRowSelection \n                                 : indx%2===0 \n                                 ? classes.TableRowEven\n                                 : classes.TableRow}>\n                    {row.cells.map((cell,indx) => {\n                        return (\n                        <td\n                            {...cell.getCellProps()}\n                            className = {classes.TableCell}\n                        >\n                            {cell.render('Cell')}\n                        </td>\n                        )\n                    })}\n                    </tr>\n                )\n                })}\n            </tbody>\n            </table>\n        </div>\n         {/* from https://react-table.tanstack.com/docs/examples/pagination\n        Pagination can be built however you'd like. \n        This is just a very basic UI implementation:\n      */}\n        <div className= {classes.TablePagination}>\n        <button className = {classes.PaginationButtonSpace} onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n            {'<<'}\n        </button>{' '}\n        <button className = {classes.PaginationButtonSpace} onClick={() => previousPage()} disabled={!canPreviousPage}>\n            {'<'}\n        </button>{' '}\n        <button className = {classes.PaginationButtonSpace} onClick={() => nextPage()} disabled={!canNextPage}>\n            {'>'}\n        </button>{' '}\n        <button className = {classes.PaginationButtonSpace} onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n            {'>>'}\n        </button>{' '}\n        <span className = {classes.PaginationButtonSpace}>\n            Page{' '}\n            <strong>\n            {pageIndex + 1} of {pageOptions.length}\n            </strong>{' '}\n        </span>\n        <span>\n            | Go to page:{' '}\n            <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={e => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\n                gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n            />\n        </span>{' '}\n        <select\n            value={pageSize}\n            onChange={e => {\n            setPageSize(Number(e.target.value))\n            }}\n            className = {classes.PaginationButtonSpace}\n        >\n            {[10, 20, 30, 40, 50].map(pageSize => (\n            <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n            </option>\n            ))}\n        </select>\n\n        </div>\n        </>\n      );\n   }\n   "]},"metadata":{},"sourceType":"module"}