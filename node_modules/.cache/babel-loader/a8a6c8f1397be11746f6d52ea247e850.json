{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataBuilder = () => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n  const formatData = data => {\n    const arr = data.map(val => {\n      return {\n        title: val.attributes.titles[0],\n        id: val.id\n      };\n    });\n    return arr;\n  };\n\n  const List = data => {\n    if (!data || !data.data) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Data, sorry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"list-head\",\n        children: \"Available Public Repositories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), data.data.map(dataVal => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ID\",\n            children: [dataVal.id, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Titles\",\n            children: dataVal.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, dataVal.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: [\"Data\", List(data), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataBuilder, \"9JwoaDR3IhVmHFx88DLkMf7wNyw=\", false, function () {\n  return [useFetch];\n});\n\n_c = DataBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataBuilder\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx"],"names":["React","Aux","useFetch","DataBuilder","data","loading","error","formatData","arr","map","val","title","attributes","titles","id","List","dataVal"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAGA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEhC,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,OAAN;AAAcC,IAAAA;AAAd,MAAyBJ,QAAQ,CAAE,yDAAF,CAAvC;;AAEA,QAAMK,UAAU,GAAIH,IAAD,IACnB;AACI,UAAMI,GAAoB,GAAIJ,IAAI,CAACK,GAAL,CAAUC,GAAD,IAAa;AACnD,aAAO;AAAEC,QAAAA,KAAK,EAAED,GAAG,CAACE,UAAJ,CAAeC,MAAf,CAAsB,CAAtB,CAAT;AAAmCC,QAAAA,EAAE,EAAEJ,GAAG,CAACI;AAA3C,OAAP;AACA,KAF6B,CAA9B;AAGA,WAAON,GAAP;AACH,GAND;;AAUC,QAAMO,IAAI,GAAIX,IAAD,IAAc;AACzB,QAAI,CAACA,IAAD,IAAS,CAAEA,IAAI,CAACA,IAApB,EAA0B,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAC1B,wBACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGA,IAAI,CAACA,IAAL,CAAUK,GAAV,CAAeO,OAAD,IAAiB;AAC9B,4BACE;AAAqB,UAAA,SAAS,EAAC,MAA/B;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,IAAhB;AAAA,uBAAsBA,OAAO,CAACF,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,sBAA0BE,OAAO,CAACF;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAASE,OAAO,CAACF,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OAPA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAfD;;AAmBE,sBACI,QAAC,GAAD;AAAA,uBAEKC,IAAI,CAACX,IAAD,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAvCM;;GAAMD,W;UAEmBD,Q;;;KAFnBC,W","sourcesContent":["\nimport React from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { StructuralData } from \"./SDInterface\";\n\nexport const DataBuilder = () => {\n\n const {data,loading,error} =   useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n const formatData = (data: any): StructuralData[] => \n {\n     const arr:StructuralData[] =  data.map((val:any) => {\n      return { title: val.attributes.titles[0], id: val.id }\n     })\n     return arr;\n }\n \n\n\n  const List = (data:any) => {\n    if (!data || ! data.data) return <p>No Data, sorry</p>;\n    return (\n      <ul>\n        <h2 className='list-head'>Available Public Repositories</h2>\n        {data.data.map((dataVal:any) => {\n          return (\n            <li key={dataVal.id} className='list'>\n              <span className='ID'>{dataVal.id} </span>\n              <span className='Titles'>{dataVal.id}</span>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  \n\n    return (\n        <Aux>\n            Data\n            {List(data)};\n        </Aux>\n        )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}