{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/Components/Table.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTable, usePagination } from \"react-table\";\nimport classes from './Table.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Table = ({\n  columns,\n  data\n}) => {\n  _s();\n\n  const {\n    // Table - instance properties:\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    // Pagination - instance properties:\n    // @ts-ignore\n    page,\n    // Instead of using `rows`, we'll use `page`, which has only the rows for the active page\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    // Final state object of table:\n    state: {\n      pageIndex,\n      pageSize\n    } // @ts-ignore\n\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 2\n    }\n  }, usePagination); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"classes.TableDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(pageCount - 1),\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"classes.TableDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        className: classes.Table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n              className: classes.TableHeader,\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: page.map((row, indx) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              className: indx % 2 === 0 ? classes.TableRowEven : classes.TableRow,\n              children: row.cells.map((cell, indx) => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  className: classes.TableCell,\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Table, \"3/Iefi9W1ksa/Wnb66agzNfj8Fc=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/Components/Table.tsx"],"names":["React","useTable","usePagination","classes","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","TableHeader","render","row","indx","getRowProps","TableRowEven","TableRow","cells","cell","getCellProps","TableCell"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useTable,usePagination, Row } from \"react-table\";\nimport classes from './Table.module.css';\n\nexport const Table = ({ columns, data }: {columns:any,data:any}) =>  {\n    const {\n        // Table - instance properties:\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow, // Pagination - instance properties:\n        // @ts-ignore\n        page, // Instead of using `rows`, we'll use `page`, which has only the rows for the active page\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        // Final state object of table:\n        state: { pageIndex, pageSize },\n        // @ts-ignore\n      } = useTable({\n      columns,\n      data,\n      initialState: { pageIndex: 2 }\n    },usePagination)\n   \n    // Render the UI for your table\n    return  (\n        <>\n        <div className= \"classes.TableDiv\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n            {'<<'}\n        </button>{' '}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n            {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n            {'>'}\n        </button>{' '}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n            {'>>'}\n        </button>{' '}\n       \n        </div>\n        <div className= \"classes.TableDiv\">\n            <table {...getTableProps()} className = {classes.Table}>\n            <thead>\n                {headerGroups.map((headerGroup:any) => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map((column:any) => (\n                    <th\n                        {...column.getHeaderProps()}\n                        className = {classes.TableHeader}\n                    >\n                        {column.render('Header')}\n                    </th>\n                    ))}\n                </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {page.map((row: Row<object>,indx: number) => {\n                prepareRow(row)\n                return (\n                    <tr {...row.getRowProps()} className= {indx%2===0?classes.TableRowEven:classes.TableRow}>\n                    {row.cells.map((cell,indx) => {\n                        return (\n                        <td\n                            {...cell.getCellProps()}\n                            className = {classes.TableCell}\n                        >\n                            {cell.render('Cell')}\n                        </td>\n                        )\n                    })}\n                    </tr>\n                )\n                })}\n            </tbody>\n            </table>\n        </div>\n         {/* from https://react-table.tanstack.com/docs/examples/pagination\n        Pagination can be built however you'd like. \n        This is just a very basic UI implementation:\n      */}\n        \n        </>\n      );\n   }\n   "]},"metadata":{},"sourceType":"module"}