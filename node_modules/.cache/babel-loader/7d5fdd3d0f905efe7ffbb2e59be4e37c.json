{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataBuilder = () => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n  /*const formatData = (data: any): StructuralData[] => \n   {\n       const arr:StructuralData[] =  data.map((val:any) => {\n        return { title: val.attributes.titles[0], id: val.id }\n       })\n       return arr;\n   }*/\n\n  const list = data => {\n    if (!data || !data.data) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Data, sorry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 38\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"list-head\",\n        children: \"Available Public Repositories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), data.data.map(dataVal => {})]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  };\n  /* {data.data.map((dataVal:any) => {\n          return (\n            <li key={dataVal.id} className='list'>\n              <span className='ID'>{dataVal.id} </span>\n              <span className='Titles'>{dataVal.attributes.titles[0]}</span>\n            </li>\n          );\n        })}*/\n\n\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: [\"Data\", list(data)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataBuilder, \"9JwoaDR3IhVmHFx88DLkMf7wNyw=\", false, function () {\n  return [useFetch];\n});\n\n_c = DataBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataBuilder\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx"],"names":["React","Aux","useFetch","DataBuilder","data","loading","error","list","map","dataVal"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAGA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEhC,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,OAAN;AAAcC,IAAAA;AAAd,MAAyBJ,QAAQ,CAAE,yDAAF,CAAvC;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAIE,QAAMK,IAAI,GAAIH,IAAD,IAAc;AACzB,QAAI,CAACA,IAAD,IAAS,CAAEA,IAAI,CAACA,IAApB,EAA0B,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAC1B,wBACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGA,IAAI,CAACA,IAAL,CAAUI,GAAV,CAAeC,OAAD,IAAiB,CAAE,CAAjC,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GATD;AAWA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEI,sBACI,QAAC,GAAD;AAAA,uBAEKF,IAAI,CAACH,IAAD,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxCM;;GAAMD,W;UAEmBD,Q;;;KAFnBC,W","sourcesContent":["\nimport React from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { StructuralData } from \"./SDInterface\";\n\nexport const DataBuilder = () => {\n\n const {data,loading,error} =   useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n/*const formatData = (data: any): StructuralData[] => \n {\n     const arr:StructuralData[] =  data.map((val:any) => {\n      return { title: val.attributes.titles[0], id: val.id }\n     })\n     return arr;\n }*/\n \n\n\n  const list = (data:any) => {\n    if (!data || ! data.data) return <p>No Data, sorry</p>;\n    return (\n      <ul>\n        <h2 className='list-head'>Available Public Repositories</h2>\n        {data.data.map((dataVal:any) => {})\n        }\n      </ul>\n    );\n  };\n\n  /* {data.data.map((dataVal:any) => {\n          return (\n            <li key={dataVal.id} className='list'>\n              <span className='ID'>{dataVal.id} </span>\n              <span className='Titles'>{dataVal.attributes.titles[0]}</span>\n            </li>\n          );\n        })}*/\n\n    return (\n        <Aux>\n            Data\n            {list(data)}\n        </Aux>\n        )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}