{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/ThoughtRiver/case-details-app/src/pages/Display/ContractParagraphDisplay.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ParagraphComponent } from '../../Components/InfoBox/ParagraphComponent'; //import Wrapper from '../../utils/Wrapper';\n\nimport classes from './ContractParagraphDisplay.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContractParagraphDisplay = ({\n  paragraphURL\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [paragraphData, setParaGraphData] = useState([]);\n  const [caseData, setCaseData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({});\n  const [paragraphNumber, setParagraphNumber] = React.useState(1);\n  const baseURL = \"http://localhost:3000\";\n  const componentRef = React.useRef(null);\n\n  const fetchData = async apiUrl => {\n    try {\n      fetch(apiUrl).then(res => {\n        return res.json();\n      }).then(data => {\n        if (Object.keys(data).length === 0 && \"data\" in data) setParaGraphData(prevState => [...prevState, data]);\n        setLoading(false);\n      }).catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n    } catch (err) {\n      setError(err);\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('scroll', infiniteScroll);\n  }, []);\n  React.useEffect(() => {\n    if (paragraphNumber <= 0) return;\n    const paraGraphURL = `${baseURL}${paragraphURL}?page=${paragraphNumber}&pageSize=50`;\n    fetchData(paraGraphURL);\n    if (!componentRef) return;\n  }, [paragraphNumber, id, paragraphURL]);\n  React.useLayoutEffect(() => {\n    if (paragraphData.length === 0) return;\n    if (componentRef.current && window.innerHeight > componentRef.current.scrollHeight) setParagraphNumber(prev => prev + 1);\n  }, [paragraphData]);\n\n  const displayParagraphs = () => {\n    const retComponentArr = [];\n    paragraphData.forEach(val => {\n      if (val.data || val.data.attributes) retComponentArr.push( /*#__PURE__*/_jsxDEV(ParagraphComponent, {\n        content: val.data.attributes.text ? val.data.attributes.text : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 39\n      }, this));\n    });\n    return retComponentArr;\n  };\n\n  const infiniteScroll = () => {\n    // End of the document reached?componentRef.current.scrollHeight\n    if (componentRef.current && componentRef.current.getBoundingClientRect().bottom === window.innerHeight) {\n      console.log(\"INSIDE\");\n      setParagraphNumber(prev => prev + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.fullscreenDiv,\n    ref: componentRef,\n    children: paragraphData.length > 0 && displayParagraphs()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ContractParagraphDisplay, \"e4/gvl+LK9RQSRgj2+c3Bsu5Ss0=\", false, function () {\n  return [useParams];\n});\n\n_c = ContractParagraphDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractParagraphDisplay\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/ThoughtRiver/case-details-app/src/pages/Display/ContractParagraphDisplay.tsx"],"names":["React","useState","useParams","ParagraphComponent","classes","ContractParagraphDisplay","paragraphURL","id","paragraphData","setParaGraphData","caseData","setCaseData","loading","setLoading","error","setError","paragraphNumber","setParagraphNumber","baseURL","componentRef","useRef","fetchData","apiUrl","fetch","then","res","json","data","Object","keys","length","prevState","catch","err","useEffect","window","addEventListener","infiniteScroll","paraGraphURL","useLayoutEffect","current","innerHeight","scrollHeight","prev","displayParagraphs","retComponentArr","forEach","val","attributes","push","text","getBoundingClientRect","bottom","console","log","fullscreenDiv"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ParagraphComponent } from '../../Components/InfoBox/ParagraphComponent';\n//import Wrapper from '../../utils/Wrapper';\nimport classes from './ContractParagraphDisplay.module.css';\n\nexport const ContractParagraphDisplay = ({paragraphURL} : {paragraphURL: string}) => {\n    const { id } = useParams<{ id: string }>();\n    const [paragraphData, setParaGraphData] = useState<any>([]);\n    const [caseData, setCaseData] = useState<any>({});\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState({});\n    const [paragraphNumber,setParagraphNumber] = React.useState(1);\n    const baseURL = \"http://localhost:3000\"\n    const componentRef = React.useRef<HTMLDivElement>(null);\n\n    const fetchData = async(apiUrl:string) => {\n        try {\n            fetch(apiUrl)\n                .then((res) => {\n                    return res.json()\n                })\n                .then((data) => {\n                    if(Object.keys(data).length===0 && \"data\" in data)\n                        setParaGraphData((prevState:any) => [...prevState, data] );\n                    setLoading(false);\n                }).catch(error => {\n                    setError(error);\n                    setLoading(false);\n                });\n        } catch (err) {\n            setError(err);\n            setLoading(false);\n        }\n    }\n    React.useEffect(()=> {\n        window.addEventListener('scroll', infiniteScroll);\n    },[])\n     \n    React.useEffect(()=> {\n        if(paragraphNumber<=0)\n            return;\n        const paraGraphURL= `${baseURL}${paragraphURL}?page=${paragraphNumber}&pageSize=50`\n        fetchData(paraGraphURL);\n        if(!componentRef)\n         return;\n    },[paragraphNumber, id, paragraphURL])\n    \n    React.useLayoutEffect(()=> {\n        if(paragraphData.length ===0)\n        return;\n        if(componentRef.current && window.innerHeight > componentRef.current.scrollHeight)\n            setParagraphNumber(prev=>prev+1);\n    },[paragraphData])\n    const displayParagraphs = ()=> {\n        const retComponentArr: any[] =[]\n          paragraphData.forEach((val:any)=> {\n            if(val.data || val.data.attributes)\n                retComponentArr.push( <ParagraphComponent content={val.data.attributes.text?val.data.attributes.text:\"\"}/>)\n        })\n        return retComponentArr;\n    }\n    const infiniteScroll = () => {\n        // End of the document reached?componentRef.current.scrollHeight\n        if(componentRef.current && componentRef.current.getBoundingClientRect().bottom === window.innerHeight)\n        {\n            console.log(\"INSIDE\");\n            setParagraphNumber((prev)=>prev+1);\n        }\n      \n    }\n    \n    return (\n    \n            <div className={classes.fullscreenDiv} ref = {componentRef}>\n                {paragraphData.length>0 && displayParagraphs()}\n            </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}