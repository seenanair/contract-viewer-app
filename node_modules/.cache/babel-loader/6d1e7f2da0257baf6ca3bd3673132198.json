{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react'; //Custom hook for fetch\n\nexport const useFetch = apiUrl => {\n  _s();\n\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    setLoading(true);\n\n    try {\n      fetch(apiUrl).then(res => {\n        if (!res.ok) throw Error(res.statusText);\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setLoading(false);\n      }).catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n    } catch (err) {\n      setError(err);\n      setLoading(false);\n    }\n  }, [apiUrl]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n\n_s(useFetch, \"i2dBzs/F+KgvUk8A2MJbq9rECho=\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/ThoughtRiver/contract-viewer-app/src/hooks/useFetch.ts"],"names":["useEffect","useState","useFetch","apiUrl","data","setData","loading","setLoading","error","setError","undefined","fetch","then","res","ok","Error","statusText","json","catch","err"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAIC,MAAD,IAAoB;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAM,EAAN,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAMS,SAAN,CAAlC;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACAI,MAAAA,KAAK,CAACR,MAAD,CAAL,CACKS,IADL,CACWC,GAAD,IAAS;AACX,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa,MAAMC,KAAK,CAACF,GAAG,CAACG,UAAL,CAAX;AACb,eAAOH,GAAG,CAACI,IAAJ,EAAP;AACH,OAJL,EAKKL,IALL,CAKWR,IAAD,IAAU;AACZC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OARL,EAQOW,KARP,CAQaV,KAAK,IAAI;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAXL;AAYH,KAbD,CAaE,OAAOY,GAAP,EAAY;AACVV,MAAAA,QAAQ,CAACU,GAAD,CAAR;AACAZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AAEJ,GApBQ,EAoBN,CAACJ,MAAD,CApBM,CAAT;AAsBA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAP;AACH,CA3BM;;GAAMN,Q","sourcesContent":["import { useEffect, useState } from 'react';\n\n//Custom hook for fetch\nexport const useFetch = (apiUrl: string) => {\n    const [data, setData] = useState<any>({});\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState<any>(undefined);\n    useEffect(() => {\n        setLoading(true);\n        try {\n            fetch(apiUrl)\n                .then((res) => {\n                    if (!res.ok) throw Error(res.statusText);\n                    return res.json()\n                })\n                .then((data) => {\n                    setData(data);\n                    setLoading(false);\n                }).catch(error => {\n                    setError(error);\n                    setLoading(false);\n                });\n        } catch (err) {\n            setError(err);\n            setLoading(false);\n        }\n       \n    }, [apiUrl]);\n\n    return { data, loading, error };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}