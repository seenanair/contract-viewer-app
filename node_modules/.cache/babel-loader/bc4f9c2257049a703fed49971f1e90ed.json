{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/FEATURE_SPACE/FeatureSpace_Demo/postcode-app/src/pages/Form/PostcodeForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classes from \"./PostcodeForm.module.css\";\nimport { useFetch } from \"../../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostcodeForm = ({\n  setHeaderName,\n  history\n}) => {\n  _s();\n\n  const [postCode, setPostCode] = React.useState(\"\");\n  const [submitEnable, setSubmitEnable] = Recat.useState; //Custom hook to fetch data\n\n  const {\n    data\n  } = useFetch(`https://api.postcodes.io/postcodes/${postCode}/validate`);\n  React.useEffect(() => {\n    if (!setHeaderName) return;\n    setHeaderName(\"Postcode Finder\");\n  }, [setHeaderName]);\n  React.useEffect(() => {\n    if (postCode.length !== 3) {}\n  }, [postcode]);\n\n  const handleChange = e => {\n    setPostCode(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (history) {\n      const appendPath = history.location.pathname.endsWith(\"/\") ? `${postCode}` : `/${postCode}`;\n      history.push(`${history.location.pathname}${appendPath}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.fullscreenDiv,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.center,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.padding,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a postcode\",\n            className: classes.textbox,\n            value: postCode,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          disabled: !(data && \"result\" in data && data[\"result\"]),\n          className: classes.button,\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 11\n  }, this);\n};\n\n_s(PostcodeForm, \"CZjFoaLz/wUUcqSjByg1aoKd7hs=\", false, function () {\n  return [useFetch];\n});\n\n_c = PostcodeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostcodeForm\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/FEATURE_SPACE/FeatureSpace_Demo/postcode-app/src/pages/Form/PostcodeForm.tsx"],"names":["React","classes","useFetch","PostcodeForm","setHeaderName","history","postCode","setPostCode","useState","submitEnable","setSubmitEnable","Recat","data","useEffect","length","postcode","handleChange","e","target","value","onSubmit","preventDefault","appendPath","location","pathname","endsWith","push","fullscreenDiv","center","padding","textbox","button"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,SAASC,QAAT,QAAyB,sBAAzB;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAD,KAAyF;AAAA;;AAC/G,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA/B;AACA,QAAM,CAACC,YAAD,EAAcC,eAAd,IAAiCC,KAAK,CAACH,QAA7C,CAF+G,CAI9G;;AACD,QAAM;AAAEI,IAAAA;AAAF,MAAWV,QAAQ,CAAE,sCAAqCI,QAAS,WAAhD,CAAzB;AAEAN,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAK;AACnB,QAAG,CAACT,aAAJ,EACC;AACDA,IAAAA,aAAa,CAAC,iBAAD,CAAb;AACH,GAJC,EAIA,CAACA,aAAD,CAJA;AAMFJ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,QAAGP,QAAQ,CAACQ,MAAT,KAAmB,CAAtB,EACA,CAEC;AACF,GALD,EAKE,CAACC,QAAD,CALF;;AAOE,QAAMC,YAAY,GAAIC,CAAD,IAAW;AAC9BV,IAAAA,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAIH,CAAD,IAAW;AAC1BA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAGhB,OAAH,EAAY;AACV,YAAMiB,UAAU,GAAGjB,OAAO,CAACkB,QAAR,CAAiBC,QAAjB,CAA0BC,QAA1B,CAAmC,GAAnC,IAAyC,GAAEnB,QAAS,EAApD,GAAuD,IAAGA,QAAS,EAAtF;AACAD,MAAAA,OAAO,CAACqB,IAAR,CAAc,GAAErB,OAAO,CAACkB,QAAR,CAAiBC,QAAS,GAAEF,UAAW,EAAvD;AACD;AACF,GAND;;AASE,sBACE;AAAK,IAAA,SAAS,EAAErB,OAAO,CAAC0B,aAAxB;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAEP,QAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEnB,OAAO,CAAC2B,MAAxB;AAAA,gCACE;AAAO,UAAA,SAAS,EAAE3B,OAAO,CAAC4B,OAA1B;AAAA,iCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAE,iBAAhC;AAAkD,YAAA,SAAS,EAAE5B,OAAO,CAAC6B,OAArE;AAA8E,YAAA,KAAK,EAAExB,QAArF;AAA+F,YAAA,QAAQ,EAAEU;AAAzG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,QAAQ,EAAE,EAAEJ,IAAI,IAAI,YAAaA,IAArB,IAA6BA,IAAI,CAAC,QAAD,CAAnC,CAA/B;AAA+E,UAAA,SAAS,EAAEX,OAAO,CAAC8B,MAAlG;AAA0G,UAAA,KAAK,EAAC;AAAhH;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAcP,CA/CM;;GAAM5B,Y;UAKUD,Q;;;KALVC,Y","sourcesContent":["import React from \"react\";\nimport classes from \"./PostcodeForm.module.css\"\nimport { History } from \"history\";\nimport { useFetch } from \"../../hooks/useFetch\";\n\nexport const PostcodeForm = ({setHeaderName, history }: {setHeaderName?: (val:string)=>void, history?: History }) => {\n      const [postCode,setPostCode] = React.useState(\"\");\n      const [submitEnable,setSubmitEnable] = Recat.useState\n    \n       //Custom hook to fetch data\n      const { data } = useFetch(`https://api.postcodes.io/postcodes/${postCode}/validate`);\n \n      React.useEffect(()=> {\n        if(!setHeaderName)\n         return;\n        setHeaderName(\"Postcode Finder\");\n    },[setHeaderName])\n\n    React.useEffect(() => {\n      if(postCode.length !==3) \n      {\n\n      }   \n    },[postcode])\n\n      const handleChange = (e:any) => {\n        setPostCode(e.target.value);\n      }\n    \n      const onSubmit = (e:any) => {\n        e.preventDefault();\n        if(history) {\n          const appendPath = history.location.pathname.endsWith(\"/\")?`${postCode}`:`/${postCode}`;\n          history.push(`${history.location.pathname}${appendPath}`)  \n        }\n      }\n     \n    \n        return (\n          <div className={classes.fullscreenDiv} >\n          <form onSubmit={onSubmit}>\n            <div className={classes.center}>\n              <label className={classes.padding} >\n                <input type=\"text\" placeholder= \"Type a postcode\" className={classes.textbox} value={postCode} onChange={handleChange} />\n              </label>\n              <input type=\"submit\" disabled={!(data && \"result\" in  data && data[\"result\"])} className={classes.button} value=\"Submit\" />\n           </div>\n          </form>\n          \n          </div>\n        );\n\n}"]},"metadata":{},"sourceType":"module"}