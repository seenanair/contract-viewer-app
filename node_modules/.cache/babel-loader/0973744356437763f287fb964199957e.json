{"ast":null,"code":"import { Response, Server } from \"miragejs\"; // Create a new server instance - Intercepts the requests\n\nif (process.env.NODE_ENV === \"development\") {\n  const server = new Server({\n    urlPrefix: \"http://localhost:3000/\",\n    namespace: \"\",\n\n    routes() {\n      this.get(\"/countries/:id\", (schema, request) => {\n        let {\n          id\n        } = request.params;\n\n        switch (id) {\n          case \"1\":\n            return new Response(200, {\n              \"Content-Type\": \"application/json\"\n            }, {\n              error: 'Country not found'\n            });\n\n          default:\n            break;\n        }\n      });\n    }\n\n  });\n  server.passthrough();\n}","map":{"version":3,"sources":["/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/ThoughtRiver/case-details-app/src/mock-server.js"],"names":["Response","Server","process","env","NODE_ENV","server","urlPrefix","namespace","routes","get","schema","request","id","params","error","passthrough"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,MAAlB,QAA+B,UAA/B,C,CACA;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,QAAMC,MAAM,GAAG,IAAIJ,MAAJ,CAAW;AACtBK,IAAAA,SAAS,EAAE,wBADW;AAEtBC,IAAAA,SAAS,EAAE,EAFW;;AAGtBC,IAAAA,MAAM,GAAG;AACL,WAAKC,GAAL,CAAS,gBAAT,EAA2B,CAACC,MAAD,EAASC,OAAT,KAAqB;AAC5C,YAAI;AAACC,UAAAA;AAAD,YAAOD,OAAO,CAACE,MAAnB;;AACA,gBAAQD,EAAR;AACI,eAAK,GAAL;AACI,mBAAO,IAAIZ,QAAJ,CAAa,GAAb,EAAkB;AAAC,8BAAiB;AAAlB,aAAlB,EAAyD;AAACc,cAAAA,KAAK,EAAE;AAAR,aAAzD,CAAP;;AACJ;AAAS;AAHb;AAKL,OAPC;AAQH;;AAZqB,GAAX,CAAf;AAcJT,EAAAA,MAAM,CAACU,WAAP;AACC","sourcesContent":["import {Response, Server} from \"miragejs\"\n// Create a new server instance - Intercepts the requests\nif (process.env.NODE_ENV === \"development\") {\n    const server = new Server({\n        urlPrefix: \"http://localhost:3000/\",\n        namespace: \"\",\n        routes() {\n            this.get(\"/countries/:id\", (schema, request) => {\n                let {id} = request.params;\n                switch (id) {\n                    case \"1\":\n                        return new Response(200, {\"Content-Type\":  \"application/json\"}, {error: 'Country not found'});\n                    default: break;    \n                }\n          });\n        },\n    });\nserver.passthrough();\n}"]},"metadata":{},"sourceType":"module"}