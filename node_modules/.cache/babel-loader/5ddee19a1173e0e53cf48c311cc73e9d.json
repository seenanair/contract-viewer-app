{"ast":null,"code":"import React from\"react\";import{Table}from\"../Components/Table\";import Aux from\"../hoc/Aux\";import{useFetch}from\"../hooks/useFetch\";import{jsx as _jsx}from\"react/jsx-runtime\";export var DataBuilder=function DataBuilder(){var _useFetch=useFetch(\"https://api.test.datacite.org/dois?query=prefix:10.5517\"),data=_useFetch.data,loading=_useFetch.loading,error=_useFetch.error;var prepareTableColumns=function prepareTableColumns(){return[{Header:function Header(){return\"Crystal Structure information\";},id:\"axes-header\",columns:[\"id\",\"title\"].map(function(th,idx){return{Header:th.toUpperCase(),accessor:th};})}];};var formatData=function formatData(data){return data.map(function(entry){return{id:entry.id,title:entry.attributes.titles[0].title};});};var getData=function getData(data){if(data&&data.data&&data.data.length>0)return data.data;else return[];};var ccdData=getData(data);var handleTableRowClick=function handleTableRowClick(indx){};return/*#__PURE__*/_jsx(Aux,{children:ccdData.length>0&&!loading?/*#__PURE__*/_jsx(Table,{columns:prepareTableColumns(),data:formatData(ccdData),selectedRow:0,pageIndexValue:0,pageSizeValue:0,onRowClick:handleTableRowClick}):\"\"});};","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx"],"names":["React","Table","Aux","useFetch","DataBuilder","data","loading","error","prepareTableColumns","Header","id","columns","map","th","idx","toUpperCase","accessor","formatData","entry","title","attributes","titles","getData","length","ccdData","handleTableRowClick","indx"],"mappings":"AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,qBAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,YAAhB,CACA,OAASC,QAAT,KAAyB,mBAAzB,C,2CAGA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,eAEAD,QAAQ,2DAFR,CAExBE,IAFwB,WAExBA,IAFwB,CAEnBC,OAFmB,WAEnBA,OAFmB,CAEXC,KAFW,WAEXA,KAFW,CAI/B,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC5B,MAAO,CACL,CACEC,MAAM,CAAE,wBAAM,+BAAN,EADV,CAEEC,EAAE,CAAE,aAFN,CAGEC,OAAO,CAAE,CAAC,IAAD,CAAO,OAAP,EAAgBC,GAAhB,CAAoB,SAACC,EAAD,CAAKC,GAAL,CAAa,CACxC,MAAO,CACLL,MAAM,CAAEI,EAAE,CAACE,WAAH,EADH,CAELC,QAAQ,CAAEH,EAFL,CAAP,CAID,CALQ,CAHX,CADK,CAAP,CAYD,CAbL,CAcC,GAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACZ,IAAD,CAAa,CAC3B,MAAOA,CAAAA,IAAI,CAACO,GAAL,CAAS,SAACM,KAAD,QAAgB,CAAER,EAAE,CAAEQ,KAAK,CAACR,EAAZ,CAAgBS,KAAK,CAAED,KAAK,CAACE,UAAN,CAAiBC,MAAjB,CAAwB,CAAxB,EAA2BF,KAAlD,CAAhB,EAAT,CAAP,CACJ,CAFD,CAIA,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACjB,IAAD,CAAmB,CAC9B,GAAGA,IAAI,EAAIA,IAAI,CAACA,IAAb,EAAqBA,IAAI,CAACA,IAAL,CAAUkB,MAAV,CAAiB,CAAzC,CACE,MAAOlB,CAAAA,IAAI,CAACA,IAAZ,CADF,IAGE,OAAO,EAAP,CACN,CALD,CAOA,GAAMmB,CAAAA,OAAO,CAAGF,OAAO,CAACjB,IAAD,CAAvB,CAEA,GAAMoB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,IAAD,CAAiB,CAE5C,CAFD,CAGC,mBACI,KAAC,GAAD,WACKF,OAAO,CAACD,MAAR,CAAe,CAAf,EAAoB,CAACjB,OAArB,cACC,KAAC,KAAD,EACC,OAAO,CAAEE,mBAAmB,EAD7B,CAEC,IAAI,CAAES,UAAU,CAACO,OAAD,CAFjB,CAGC,WAAW,CAAE,CAHd,CAIC,cAAc,CAAG,CAJlB,CAKC,aAAa,CAAE,CALhB,CAMC,UAAU,CAAEC,mBANb,EADD,CASC,EAVN,EADJ,CAcH,CAhDM","sourcesContent":["\nimport React from \"react\";\nimport { Table } from \"../Components/Table\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { StructuralData } from \"./SDInterface\";\n\nexport const DataBuilder = () => {\n\n  const {data,loading,error} =   useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n  const prepareTableColumns = () => {\n        return [\n          {\n            Header: () => \"Crystal Structure information\",\n            id: \"axes-header\",\n            columns: [\"id\", \"title\"].map((th, idx) => {\n              return {\n                Header: th.toUpperCase(),\n                accessor: th,\n              };\n            }),\n          },\n        ];\n      };\n   const formatData = (data:any)=> {\n        return data.map((entry:any) => ({ id: entry.id, title: entry.attributes.titles[0].title}))\n   }\n\n   const getData = (data:any) : [] => {\n        if(data && data.data && data.data.length>0)\n          return data.data;\n        else\n          return [];  \n   }\n\n   const ccdData = getData(data);\n      \n   const handleTableRowClick = (indx:number) => {\n\n   }\n    return (\n        <Aux>\n            {ccdData.length>0 && !loading  \n            ? <Table \n               columns={prepareTableColumns()} \n               data={formatData(ccdData)} \n               selectedRow={0} \n               pageIndexValue ={0} \n               pageSizeValue={0} \n               onRowClick={handleTableRowClick}\n               /> \n            : \"\" }\n        </Aux>\n        )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}