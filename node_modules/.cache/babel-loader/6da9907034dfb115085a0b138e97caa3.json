{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/ThoughtRiver/case-details-app/src/pages/Display/ContractDisplay.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks/useFetch'; //import Wrapper from '../../utils/Wrapper';\n\nimport classes from './ContractDisplay.module.css';\nimport { ContractParagraphDisplay } from './ContractParagraphDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContractDisplay = ({\n  setHeaderName\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [contractData, setContractData] = useState();\n  const [paragraphURL, setParagraphURL] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({});\n  const baseURL = \"http://localhost:3000\";\n  const {\n    data\n  } = useFetch(`${baseURL}/contracts/${id}`);\n\n  const fetchData = async apiUrl => {\n    try {\n      fetch(apiUrl).then(res => {\n        return res.json();\n      }).then(data => {\n        setContractData(data);\n        setLoading(false);\n      }).catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n    } catch (err) {\n      setError(err);\n      setLoading(false);\n    }\n  };\n  /* React.useEffect(() => {\n       try {\n        fetchData(`${baseURL}/contracts/${id}`);\n       }\n       catch(err) {\n           console.log(err);\n       }\n    },[id])*/\n\n\n  React.useEffect(() => {\n    if (contractData && Object.keys(contractData).length >= 0) {\n      if (setHeaderName) setHeaderName(contractData.data.attributes[\"name\"]);\n      setParagraphURL(contractData.relationships.paragraphs.links.self);\n    }\n  }, [contractData, setHeaderName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.fullscreenDiv,\n    children: paragraphURL.length > 0 && /*#__PURE__*/_jsxDEV(ContractParagraphDisplay, {\n      paragraphURL: paragraphURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 44\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ContractDisplay, \"mG2yTyAbKAAMHi1/YVDwpz/Ts6c=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = ContractDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractDisplay\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/ThoughtRiver/case-details-app/src/pages/Display/ContractDisplay.tsx"],"names":["React","useState","useParams","useFetch","classes","ContractParagraphDisplay","ContractDisplay","setHeaderName","id","contractData","setContractData","paragraphURL","setParagraphURL","loading","setLoading","error","setError","baseURL","data","fetchData","apiUrl","fetch","then","res","json","catch","err","useEffect","Object","keys","length","attributes","relationships","paragraphs","links","self","fullscreenDiv"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,sBAAzB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,wBAAT,QAAyC,4BAAzC;;AAOA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA4D;AAAA;;AACvF,QAAM;AAAEC,IAAAA;AAAF,MAASN,SAAS,EAAxB;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,EAAhD;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMgB,OAAO,GAAG,uBAAhB;AACH,QAAM;AAACC,IAAAA;AAAD,MAASf,QAAQ,CAAE,GAAEc,OAAQ,cAAaT,EAAG,EAA5B,CAAvB;;AAEG,QAAMW,SAAS,GAAG,MAAMC,MAAN,IAAwB;AACtC,QAAI;AACAC,MAAAA,KAAK,CAACD,MAAD,CAAL,CACKE,IADL,CACWC,GAAD,IAAS;AACX,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,OAHL,EAIKF,IAJL,CAIWJ,IAAD,IAAU;AACZR,QAAAA,eAAe,CAACQ,IAAD,CAAf;AACAJ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAPL,EAOOW,KAPP,CAOaV,KAAK,IAAI;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAVL;AAWH,KAZD,CAYE,OAAOY,GAAP,EAAY;AACVV,MAAAA,QAAQ,CAACU,GAAD,CAAR;AACAZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAjBD;AAmBF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEId,EAAAA,KAAK,CAAC2B,SAAN,CAAgB,MAAM;AACnB,QAAGlB,YAAY,IAAKmB,MAAM,CAACC,IAAP,CAAYpB,YAAZ,EAA0BqB,MAA1B,IAAkC,CAAtD,EACA;AACC,UAAGvB,aAAH,EACIA,aAAa,CAACE,YAAY,CAACS,IAAb,CAAkBa,UAAlB,CAA6B,MAA7B,CAAD,CAAb;AACJnB,MAAAA,eAAe,CAACH,YAAY,CAACuB,aAAb,CAA2BC,UAA3B,CAAsCC,KAAtC,CAA4CC,IAA7C,CAAf;AACA;AACF,GAPF,EAOG,CAAC1B,YAAD,EAAeF,aAAf,CAPH;AASA,sBAEQ;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACgC,aAAxB;AAAA,cACMzB,YAAY,CAACmB,MAAb,GAAoB,CAApB,iBAAyB,QAAC,wBAAD;AAA0B,MAAA,YAAY,EAAEnB;AAAxC;AAAA;AAAA;AAAA;AAAA;AAD/B;AAAA;AAAA;AAAA;AAAA,UAFR;AAMH,CApDM;;GAAML,e;UACMJ,S,EAMHC,Q;;;KAPHG,e","sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks/useFetch';\n//import Wrapper from '../../utils/Wrapper';\nimport classes from './ContractDisplay.module.css';\nimport { ContractParagraphDisplay } from './ContractParagraphDisplay';\n\ntype CaseDataType = {\n    caseID: string;\n    paragraphURL:string;\n}\n\nexport const ContractDisplay = ({setHeaderName} : {setHeaderName?: (val:string)=>void}) => {\n    const { id } = useParams<{ id: string }>();\n    const [contractData, setContractData] = useState<any>();\n    const [paragraphURL, setParagraphURL] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState({});\n    const baseURL = \"http://localhost:3000\"\n const {data} = useFetch(`${baseURL}/contracts/${id}`) \n\n    const fetchData = async(apiUrl:string) => {\n        try {\n            fetch(apiUrl)\n                .then((res) => {\n                    return res.json()\n                })\n                .then((data) => {\n                    setContractData(data);\n                    setLoading(false);\n                }).catch(error => {\n                    setError(error);\n                    setLoading(false);\n                });\n        } catch (err) {\n            setError(err);\n            setLoading(false);\n        }\n    }\n  \n  /* React.useEffect(() => {\n       try {\n        fetchData(`${baseURL}/contracts/${id}`);\n       }\n       catch(err) {\n           console.log(err);\n       }\n    },[id])*/\n\n    React.useEffect(() => {\n       if(contractData && (Object.keys(contractData).length>=0))\n       {\n        if(setHeaderName)\n            setHeaderName(contractData.data.attributes[\"name\"]);\n        setParagraphURL(contractData.relationships.paragraphs.links.self);\n       }\n     },[contractData, setHeaderName])\n  \n    return (\n    \n            <div className={classes.fullscreenDiv} >\n                { paragraphURL.length>0 && <ContractParagraphDisplay paragraphURL={paragraphURL}/>}\n            </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}