{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Table } from \"../Components/Table/Table\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport classes from \"./DataBuilder.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataBuilder = () => {\n  _s();\n\n  const [selectedDataIndex, setSelectedDataIndex] = React.useState(-1);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n  const prepareTableOverviewColumns = () => {\n    return [{\n      Header: () => \"Overview\",\n      id: \"axes-header\",\n      columns: [\"id\", \"title\"].map((th, idx) => {\n        return {\n          Header: th.toUpperCase(),\n          accessor: th\n        };\n      })\n    }];\n  };\n\n  const columns = React.useMemo(() => [{\n    id: 'firstcolumn',\n    width: 25\n  }, {\n    id: 'secondcolumn',\n    width: 25\n  }], []);\n\n  const formatData = data => {\n    return data.map(entry => ({\n      id: entry.id,\n      title: entry.attributes.titles[0].title\n    }));\n  };\n\n  const getData = data => {\n    if (data && data.data && data.data.length > 0) return data.data;else return [];\n  };\n\n  const ccdData = getData(data);\n\n  const getDetails = () => {\n    if (selectedDataIndex <= 0) return \"\";else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const handleTableRowClick = indx => {\n    setSelectedDataIndex(indx);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: ccdData.length > 0 && !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Conatiner,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Left,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: prepareTableOverviewColumns(),\n          data: formatData(ccdData),\n          selectedRow: 0,\n          pageIndexValue: 0,\n          pageSizeValue: 10,\n          onRowClick: handleTableRowClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Right,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: prepareTableOverviewColumns(),\n          data: formatData(ccdData),\n          selectedRow: 0,\n          pageIndexValue: 0,\n          pageSizeValue: 10,\n          onRowClick: handleTableRowClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataBuilder, \"8HWEBegPQYeaZZ89WBAS5NpGif4=\", false, function () {\n  return [useFetch];\n});\n\n_c = DataBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataBuilder\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx"],"names":["React","Table","Aux","useFetch","classes","DataBuilder","selectedDataIndex","setSelectedDataIndex","useState","data","loading","error","prepareTableOverviewColumns","Header","id","columns","map","th","idx","toUpperCase","accessor","useMemo","width","formatData","entry","title","attributes","titles","getData","length","ccdData","getDetails","handleTableRowClick","indx","Conatiner","Left","Right"],"mappings":"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","sourcesContent":["\n\nimport React from \"react\";\nimport { InfoBox } from \"../Components/InfoBox/InfoBox\";\nimport { Table } from \"../Components/Table/Table\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport classes from \"./DataBuilder.module.css\"\n\nexport const DataBuilder = () => {\n\n  const [selectedDataIndex,setSelectedDataIndex] = React.useState(-1);\n\n  const {data,loading,error} =   useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n\n  const prepareTableOverviewColumns = () => {\n        return [\n          {\n            Header: () => \"Overview\",\n            id: \"axes-header\",\n            columns: [\"id\", \"title\"].map((th, idx) => {\n              return {\n                Header: th.toUpperCase(),\n                accessor: th,\n              };\n            }),\n          },\n        ];\n      };\n\n      const columns = React.useMemo(\n        () => [\n          {\n            id: 'firstcolumn',\n            width: 25,\n            \n          },\n          {\n            id: 'secondcolumn',\n            width: 25,\n            \n          }\n        ],\n      []\n    );   \n   const formatData = (data:any)=> {\n        return data.map((entry:any) => ({ id: entry.id, title: entry.attributes.titles[0].title}))\n   }\n\n   const getData = (data:any) : [] => {\n        if(data && data.data && data.data.length>0)\n          return data.data;\n        else\n          return [];  \n   }\n\n   const ccdData = getData(data);\n\n   const getDetails = ()  => {\n     if(selectedDataIndex<=0)\n      return \"\";\n    else {\n      return (\n        <div>\n\n        </div>\n      )\n    }\n   }\n      \n   const handleTableRowClick = (indx:number) => {\n    setSelectedDataIndex(indx);\n   }\n    return (\n        <Aux>\n            {ccdData.length>0 && !loading  \n            ? \n            <div className= {classes.Conatiner}>\n                <div className = {classes.Left} > \n                    <Table \n                      columns={prepareTableOverviewColumns()} \n                      data={formatData(ccdData)} \n                      selectedRow={0} \n                      pageIndexValue ={0} \n                      pageSizeValue={10} \n                      onRowClick={handleTableRowClick}\n                      /> \n                </div> \n                <div className = {classes.Right} >\n                <Table \n                      columns={prepareTableOverviewColumns()} \n                      data={formatData(ccdData)} \n                      selectedRow={0} \n                      pageIndexValue ={0} \n                      pageSizeValue={10} \n                      onRowClick={handleTableRowClick}\n                      /> \n                </div>   \n            </div>\n            : \"\" }\n        </Aux>\n        )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}