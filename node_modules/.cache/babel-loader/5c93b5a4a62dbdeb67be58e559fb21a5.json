{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/ThoughtRiver/case-details-app/src/pages/Display/CaseIDParagraphDisplay.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classes from './CaseIDParagraphDisplay.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CaseIDParagraphDisplay = ({\n  setHeaderName\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [paragraphData, setParaGraphData] = useState([]);\n  const [caseData, setCaseData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({});\n  const [paragraphNumber, setParagraphNumber] = React.useState(0);\n\n  const fetchData = async (apiUrl, isParagraphData) => {\n    try {\n      fetch(apiUrl).then(res => {\n        return res.json();\n      }).then(data => {\n        if (isParagraphData) {\n          setParaGraphData(prevState => [...prevState, data]);\n        } else setCaseData(data);\n\n        setLoading(false);\n      }).catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n    } catch (err) {\n      setError(err);\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    //const baseURL = \"https://7012f4b2-84c0-4f96-8030-fc94e5ea201c.mock.pstmn.io/contracts/\"\n    const baseURL = \"http:/localhost:3000/employees/1/\";\n    fetchData(baseURL, false); //fetchData(`${baseURL}${id}`,false);\n  }, [id]); //Initialise header on mount\n\n  React.useEffect(() => {\n    if (Object.keys(caseData).length <= 0) return;\n    if (!setHeaderName) return;\n    setHeaderName(caseData.data.attributes[\"name\"]);\n    setParagraphNumber(1);\n  }, [caseData, setHeaderName]);\n  React.useEffect(() => {\n    if (paragraphNumber <= 0) return;\n    const baseURL = \"https://7012f4b2-84c0-4f96-8030-fc94e5ea201c.mock.pstmn.io/contracts/\";\n    const paraGraphURL = `${baseURL}${id}/paragraphs?page=${paragraphNumber}&pageSize=50`;\n    fetchData(paraGraphURL, true);\n  }, [paragraphNumber, id]);\n\n  const formatParagraphs = () => {\n    const data = paragraphData.map(val => {\n      const ret = val.data.attributes.text;\n      return ret;\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.fullscreenDiv,\n    children: paragraphData.length > 0 && formatParagraphs()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CaseIDParagraphDisplay, \"gbkKjdQeYTcpwvQCUJhukqJEvFY=\", false, function () {\n  return [useParams];\n});\n\n_c = CaseIDParagraphDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CaseIDParagraphDisplay\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/ThoughtRiver/case-details-app/src/pages/Display/CaseIDParagraphDisplay.tsx"],"names":["React","useState","useParams","classes","CaseIDParagraphDisplay","setHeaderName","id","paragraphData","setParaGraphData","caseData","setCaseData","loading","setLoading","error","setError","paragraphNumber","setParagraphNumber","fetchData","apiUrl","isParagraphData","fetch","then","res","json","data","prevState","catch","err","useEffect","baseURL","Object","keys","length","attributes","paraGraphURL","formatParagraphs","map","val","ret","text","fullscreenDiv"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Wrapper from '../../utils/Wrapper';\nimport classes from './CaseIDParagraphDisplay.module.css';\n\nexport const CaseIDParagraphDisplay = ({setHeaderName} : {setHeaderName?: (val:string)=>void}) => {\n    const { id } = useParams<{ id: string }>();\n    const [paragraphData, setParaGraphData] = useState<any>([]);\n    const [caseData, setCaseData] = useState<any>({});\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState({});\n    const [paragraphNumber,setParagraphNumber] = React.useState(0);\n  \n    const fetchData = async(apiUrl:string,isParagraphData:boolean) => {\n        try {\n            fetch(apiUrl)\n                .then((res) => {\n                    return res.json()\n                })\n                .then((data) => {\n                    if(isParagraphData)\n                    {\n                      setParaGraphData((prevState:any) => [...prevState, data] );\n                    }\n                    else setCaseData(data);\n                    setLoading(false);\n                }).catch(error => {\n                    setError(error);\n                    setLoading(false);\n                });\n        } catch (err) {\n            setError(err);\n            setLoading(false);\n        }\n    }\n    React.useEffect(() => {\n        //const baseURL = \"https://7012f4b2-84c0-4f96-8030-fc94e5ea201c.mock.pstmn.io/contracts/\"\n        const baseURL = \"http:/localhost:3000/employees/1/\"\n        fetchData(baseURL,false);\n        //fetchData(`${baseURL}${id}`,false);\n    },[id])\n\n    //Initialise header on mount\n    React.useEffect(()=> {\n        if(Object.keys(caseData).length<=0)\n         return;\n        if(!setHeaderName)\n         return;\n        setHeaderName(caseData.data.attributes[\"name\"]);\n        setParagraphNumber(1);\n    },[caseData, setHeaderName])\n    \n    React.useEffect(()=> {\n        if(paragraphNumber<=0)\n        return;\n        const baseURL = \"https://7012f4b2-84c0-4f96-8030-fc94e5ea201c.mock.pstmn.io/contracts/\"\n        const paraGraphURL= `${baseURL}${id}/paragraphs?page=${paragraphNumber}&pageSize=50`\n        fetchData(paraGraphURL,true);\n    },[paragraphNumber, id])\n    \n    const formatParagraphs = ()=> {\n        const data =  paragraphData.map((val:any)=> {\n            const ret = val.data.attributes.text;\n            return ret;\n        }) \n        return data;  \n    }\n    \n    return (\n    \n            <div className={classes.fullscreenDiv} >\n                {paragraphData.length>0 && formatParagraphs()}\n            </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}