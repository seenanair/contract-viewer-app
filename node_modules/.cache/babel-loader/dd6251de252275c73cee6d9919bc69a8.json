{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { InfoBox } from \"../Components/InfoBox/InfoBox\";\nimport { Table } from \"../Components/Table/Table\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport classes from \"./DataBuilder.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataBuilder = () => {\n  _s();\n\n  const [selectedDataIndex, setSelectedDataIndex] = React.useState(-1);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n  const prepareTableOverviewColumns = () => {\n    return [{\n      Header: () => \"Overview\",\n      id: \"axes-header\",\n      columns: [\"id\", \"title\"].map((th, idx) => {\n        return {\n          Header: th.toUpperCase(),\n          accessor: th\n        };\n      })\n    }];\n  };\n\n  const formatHeaderData = data => {\n    return data.map(entry => ({\n      id: entry.id,\n      title: entry.attributes.titles[0].title\n    }));\n  };\n\n  const getData = data => {\n    if (data && data.data && data.data.length > 0) return data.data;else return [];\n  };\n\n  const ccdData = getData(data);\n\n  const formatContentData = data => {\n    if (selectedDataIndex <= 0) return \"\";else {\n      return data.map(entry => ({\n        \"Publication Year\": entry.attributes.publicationYear,\n        Publisher: entry.attributes.publisher,\n        Subjects: entry.attributes.subjects,\n        URL: entry.attributes.url\n      }));\n    }\n  };\n\n  const prepareContentdata = data => {\n    const formatData = formatContentData(data);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 14\n    }, this);\n    Object.keys(formatData).map(key => {});\n  };\n\n  const handleTableRowClick = indx => {\n    setSelectedDataIndex(indx);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: ccdData.length > 0 && !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Conatiner,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Left,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: prepareTableOverviewColumns(),\n          data: formatHeaderData(ccdData),\n          selectedRow: 0,\n          pageIndexValue: 0,\n          pageSizeValue: 10,\n          onRowClick: handleTableRowClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Right,\n        children: /*#__PURE__*/_jsxDEV(InfoBox, {\n          children: getDetails(ccdData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataBuilder, \"E2xlcPs+tVCK+uFgfQGMym4+w9I=\", false, function () {\n  return [useFetch];\n});\n\n_c = DataBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataBuilder\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx"],"names":["React","InfoBox","Table","Aux","useFetch","classes","DataBuilder","selectedDataIndex","setSelectedDataIndex","useState","data","loading","error","prepareTableOverviewColumns","Header","id","columns","map","th","idx","toUpperCase","accessor","formatHeaderData","entry","title","attributes","titles","getData","length","ccdData","formatContentData","publicationYear","Publisher","publisher","Subjects","subjects","URL","url","prepareContentdata","formatData","Object","keys","key","handleTableRowClick","indx","Conatiner","Left","Right","getDetails"],"mappings":"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","sourcesContent":["\n\nimport React from \"react\";\nimport { InfoBox } from \"../Components/InfoBox/InfoBox\";\nimport { Table } from \"../Components/Table/Table\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport classes from \"./DataBuilder.module.css\"\n\nexport const DataBuilder = () => {\n\n  const [selectedDataIndex,setSelectedDataIndex] = React.useState(-1);\n\n  const {data,loading,error} =   useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n\n  const prepareTableOverviewColumns = () => {\n        return [\n          {\n            Header: () => \"Overview\",\n            id: \"axes-header\",\n            columns: [\"id\", \"title\"].map((th, idx) => {\n              return {\n                Header: th.toUpperCase(),\n                accessor: th,\n              };\n            }),\n          },\n        ];\n      };\n\n      \n   const formatHeaderData = (data:any)=> {\n        return data.map((entry:any) => ({ id: entry.id, title: entry.attributes.titles[0].title}))\n   }\n\n   const getData = (data:any) : [] => {\n        if(data && data.data && data.data.length>0)\n          return data.data;\n        else\n          return [];  \n   }\n\n   const ccdData = getData(data);\n\n   const formatContentData= (data:any)  => {\n     if(selectedDataIndex<=0)\n      return \"\";\n    else {\n      return  data.map((entry:any) => ({ \n      \"Publication Year\" : entry.attributes.publicationYear, \n      Publisher: entry.attributes.publisher,\n      Subjects: entry.attributes.subjects,\n      URL : entry.attributes.url}))\n    }\n   }\n\n   const prepareContentdata = (data:any) => {\n     const formatData = formatContentData(data);\n\n     return (<ul></ul>)\n     Object.keys(formatData).map((key) => {\n\n     })\n   }\n      \n   const handleTableRowClick = (indx:number) => {\n    setSelectedDataIndex(indx);\n   }\n    return (\n        <Aux>\n            {ccdData.length>0 && !loading  \n            ? \n            <div className= {classes.Conatiner}>\n                <div className = {classes.Left} > \n                    <Table \n                      columns={prepareTableOverviewColumns()} \n                      data={formatHeaderData(ccdData)} \n                      selectedRow={0} \n                      pageIndexValue ={0} \n                      pageSizeValue={10} \n                      onRowClick={handleTableRowClick}\n                      /> \n                </div> \n                <div className = {classes.Right} >\n                <InfoBox>{getDetails(ccdData)}</InfoBox>\n                      \n                </div>   \n            </div>\n            : \"\" }\n        </Aux>\n        )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}