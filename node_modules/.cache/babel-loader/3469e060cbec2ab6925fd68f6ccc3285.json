{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/ThoughtRiver/contract-viewer-app/src/pages/Display/ContractDisplay.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks/useFetch'; //import Wrapper from '../../utils/Wrapper';\n\nimport classes from './ContractDisplay.module.css';\nimport { ContractParagraphDisplay } from './ContractParagraphDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContractDisplay = ({\n  setHeaderName\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const baseURL = \"http://localhost:3000\";\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`${baseURL}/contracts/${id}`);\n  React.useEffect(() => {\n    if (data && Object.keys(data).length > 0) {\n      if (setHeaderName) setHeaderName(data.data.attributes[\"name\"]);\n    }\n  }, [data, setHeaderName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.fullscreenDiv,\n    children: loading ? \"Loading...\" : error ? `Error! ${error.toString()}` : /*#__PURE__*/_jsxDEV(ContractParagraphDisplay, {\n      paragraphURL: `/contracts/${id}/paragraphs`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ContractDisplay, \"A0ZN2jciAES4KTruYHeAJfX0vFE=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = ContractDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractDisplay\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/ThoughtRiver/contract-viewer-app/src/pages/Display/ContractDisplay.tsx"],"names":["React","useParams","useFetch","classes","ContractParagraphDisplay","ContractDisplay","setHeaderName","id","baseURL","data","loading","error","useEffect","Object","keys","length","attributes","fullscreenDiv","toString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,QAAT,QAAyB,sBAAzB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,wBAAT,QAAyC,4BAAzC;;AAOA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA4D;AAAA;;AACvF,QAAM;AAAEC,IAAAA;AAAF,MAASN,SAAS,EAAxB;AACA,QAAMO,OAAO,GAAG,uBAAhB;AAED,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,OAAN;AAAcC,IAAAA;AAAd,MAAuBT,QAAQ,CAAE,GAAEM,OAAQ,cAAaD,EAAG,EAA5B,CAArC;AAEIP,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACrB,QAAGH,IAAI,IAAKI,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBM,MAAlB,GAAyB,CAArC,EACA;AACC,UAAGT,aAAH,EACIA,aAAa,CAACG,IAAI,CAACA,IAAL,CAAUO,UAAV,CAAqB,MAArB,CAAD,CAAb;AACJ;AACF,GANA,EAMC,CAACP,IAAD,EAAOH,aAAP,CAND;AAQH,sBAEQ;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACc,aAAxB;AAAA,cACMP,OAAO,GACH,YADG,GAEHC,KAAK,GACA,UAASA,KAAK,CAACO,QAAN,EAAiB,EAD1B,gBAEC,QAAC,wBAAD;AAA0B,MAAA,YAAY,EAAG,cAAaX,EAAG;AAAzD;AAAA;AAAA;AAAA;AAAA;AALhB;AAAA;AAAA;AAAA;AAAA,UAFR;AAUH,CAxBM;;GAAMF,e;UACMJ,S,EAGaC,Q;;;KAJnBG,e","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks/useFetch';\n//import Wrapper from '../../utils/Wrapper';\nimport classes from './ContractDisplay.module.css';\nimport { ContractParagraphDisplay } from './ContractParagraphDisplay';\n\ntype ContractDataType = {\n    caseID: string;\n    paragraphURL:string;\n}\n\nexport const ContractDisplay = ({setHeaderName} : {setHeaderName?: (val:string)=>void}) => {\n    const { id } = useParams<{ id: string }>();\n    const baseURL = \"http://localhost:3000\"\n\n   const {data,loading,error} = useFetch(`${baseURL}/contracts/${id}`) \n\n       React.useEffect(() => {\n        if(data && (Object.keys(data).length>0))\n        {\n         if(setHeaderName)\n             setHeaderName(data.data.attributes[\"name\"]);\n        }\n      },[data, setHeaderName])\n  \n    return (\n    \n            <div className={classes.fullscreenDiv} >\n                { loading \n                    ? \"Loading...\"\n                    : error \n                        ? `Error! ${error.toString()}`\n                         :  <ContractParagraphDisplay paragraphURL={`/contracts/${id}/paragraphs`}/> }\n            </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}