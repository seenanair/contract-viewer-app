{"ast":null,"code":"import _slicedToArray from\"/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/FEATURE_SPACE/FeatureSpace_Demo/postcode-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import classes from\"./PostcodeForm.module.css\";import{useFetch}from\"../../hooks/useFetch\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var PostcodeForm=function PostcodeForm(_ref){var setHeaderName=_ref.setHeaderName,history=_ref.history;var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),postCode=_React$useState2[0],setPostCode=_React$useState2[1];//Custom hook to fetch data\nvar _useFetch=useFetch(\"https://api.postcodes.io/postcodes/\".concat(postCode,\"/validate\")),data=_useFetch.data;React.useEffect(function(){if(!setHeaderName)return;setHeaderName(\"Postcode Finder\");},[setHeaderName]);var handleChange=function handleChange(e){setPostCode(e.target.value);};var onSubmit=function onSubmit(e){e.preventDefault();if(history){var appendPath=history.location.pathname.endsWith(\"//\")?\"\".concat(postCode):\"/\".concat(postCode);alert('Path='+history.location.pathname);alert('Append path='+appendPath);history===null||history===void 0?void 0:history.push(\"\".concat(history.location.pathname).concat(appendPath));}};return/*#__PURE__*/_jsx(\"div\",{className:classes.fullscreenDiv,children:/*#__PURE__*/_jsx(\"form\",{onSubmit:onSubmit,children:/*#__PURE__*/_jsxs(\"div\",{className:classes.center,children:[/*#__PURE__*/_jsx(\"label\",{className:classes.padding,children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type a postcode\",className:classes.textbox,value:postCode,onChange:handleChange})}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",disabled:!(data&&\"result\"in data&&data[\"result\"]),className:classes.button,value:\"Submit\"})]})})});};","map":{"version":3,"sources":["/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/FEATURE_SPACE/FeatureSpace_Demo/postcode-app/src/pages/Form/PostcodeForm.tsx"],"names":["React","classes","useFetch","PostcodeForm","setHeaderName","history","useState","postCode","setPostCode","data","useEffect","handleChange","e","target","value","onSubmit","preventDefault","appendPath","location","pathname","endsWith","alert","push","fullscreenDiv","center","padding","textbox","button"],"mappings":"oNAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,OAASC,QAAT,KAAyB,sBAAzB,C,wFAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAyF,IAAvFC,CAAAA,aAAuF,MAAvFA,aAAuF,CAAxEC,OAAwE,MAAxEA,OAAwE,qBAChFL,KAAK,CAACM,QAAN,CAAe,EAAf,CADgF,oDACxGC,QADwG,qBAC/FC,WAD+F,qBAG9G;AAH8G,cAI9FN,QAAQ,8CAAuCK,QAAvC,cAJsF,CAIvGE,IAJuG,WAIvGA,IAJuG,CAM/GT,KAAK,CAACU,SAAN,CAAgB,UAAK,CACnB,GAAG,CAACN,aAAJ,CACC,OACDA,aAAa,CAAC,iBAAD,CAAb,CACH,CAJC,CAIA,CAACA,aAAD,CAJA,EAMA,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAW,CAC9BJ,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,CACD,CAFD,CAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACH,CAAD,CAAW,CAC1BA,CAAC,CAACI,cAAF,GACA,GAAGX,OAAH,CAAY,CACV,GAAMY,CAAAA,UAAU,CAAGZ,OAAO,CAACa,QAAR,CAAiBC,QAAjB,CAA0BC,QAA1B,CAAmC,IAAnC,YAA4Cb,QAA5C,aAA2DA,QAA3D,CAAnB,CACAc,KAAK,CAAC,QAAShB,OAAO,CAACa,QAAR,CAAiBC,QAA3B,CAAL,CACAE,KAAK,CAAC,eAAgBJ,UAAjB,CAAL,CACAZ,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAEiB,IAAT,WAAiBjB,OAAO,CAACa,QAAR,CAAiBC,QAAlC,SAA6CF,UAA7C,GACD,CACF,CARD,CAWE,mBACE,YAAK,SAAS,CAAEhB,OAAO,CAACsB,aAAxB,uBACA,aAAM,QAAQ,CAAER,QAAhB,uBACE,aAAK,SAAS,CAAEd,OAAO,CAACuB,MAAxB,wBACE,cAAO,SAAS,CAAEvB,OAAO,CAACwB,OAA1B,uBACE,cAAO,IAAI,CAAC,MAAZ,CAAmB,WAAW,CAAE,iBAAhC,CAAkD,SAAS,CAAExB,OAAO,CAACyB,OAArE,CAA8E,KAAK,CAAEnB,QAArF,CAA+F,QAAQ,CAAEI,YAAzG,EADF,EADF,cAIE,cAAO,IAAI,CAAC,QAAZ,CAAqB,QAAQ,CAAE,EAAEF,IAAI,EAAI,UAAaA,CAAAA,IAArB,EAA6BA,IAAI,CAAC,QAAD,CAAnC,CAA/B,CAA+E,SAAS,CAAER,OAAO,CAAC0B,MAAlG,CAA0G,KAAK,CAAC,QAAhH,EAJF,GADF,EADA,EADF,CAcP,CAzCM","sourcesContent":["import React from \"react\";\nimport classes from \"./PostcodeForm.module.css\"\nimport { History } from \"history\";\nimport { useFetch } from \"../../hooks/useFetch\";\n\nexport const PostcodeForm = ({setHeaderName, history }: {setHeaderName?: (val:string)=>void, history?: History }) => {\n      const [postCode,setPostCode] = React.useState(\"\");\n    \n       //Custom hook to fetch data\n      const { data } = useFetch(`https://api.postcodes.io/postcodes/${postCode}/validate`);\n \n      React.useEffect(()=> {\n        if(!setHeaderName)\n         return;\n        setHeaderName(\"Postcode Finder\");\n    },[setHeaderName])\n\n      const handleChange = (e:any) => {\n        setPostCode(e.target.value);\n      }\n    \n      const onSubmit = (e:any) => {\n        e.preventDefault();\n        if(history) {\n          const appendPath = history.location.pathname.endsWith(\"//\")?`${postCode}`:`/${postCode}`;\n          alert('Path='+ history.location.pathname);\n          alert('Append path='+ appendPath);\n          history?.push(`${history.location.pathname}${appendPath}`)  \n        }\n      }\n     \n    \n        return (\n          <div className={classes.fullscreenDiv} >\n          <form onSubmit={onSubmit}>\n            <div className={classes.center}>\n              <label className={classes.padding} >\n                <input type=\"text\" placeholder= \"Type a postcode\" className={classes.textbox} value={postCode} onChange={handleChange} />\n              </label>\n              <input type=\"submit\" disabled={!(data && \"result\" in  data && data[\"result\"])} className={classes.button} value=\"Submit\" />\n           </div>\n          </form>\n          \n          </div>\n        );\n\n}"]},"metadata":{},"sourceType":"module"}