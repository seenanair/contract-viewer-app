{"ast":null,"code":"import { Response, Server } from \"miragejs\"; // Create a new server instance - Intercepts the requests\n\nif (process.env.NODE_ENV === \"development\") {\n  const server = new Server({\n    urlPrefix: \"http://localhost:3000/\",\n    namespace: \"\",\n\n    routes() {\n      this.get(\"/contracts/:id/paragraphs\", (schema, request) => {\n        let {\n          id\n        } = request.queryParams;\n\n        switch (id) {\n          case \"1\":\n            return new Response(200, {\n              \"Content-Type\": \"application/json\"\n            }, {\n              \"data\": {\n                \"type\": \"contract-paragraphs\",\n                \"id\": \"0d60b462-2b98-11e8-97a1-080027a8df8b\",\n                \"attributes\": {\n                  \"text\": \"Lorem ipsum dolor sit amet,consectetur adipiscingelit,sed do eiusmod tempor incididunt ut labore et dolor magna aliqua Utenim ad minim veniam,quis nostrud exercitation ullamco laboris nisi ut aliquipex ea commodo consequat\"\n                }\n              },\n              \"pagination\": {\n                \"count\": \"15000\",\n                \"page\": \"1\",\n                \"pages\": \"300\",\n                \"pageSize\": \"50\"\n              }\n            });\n\n          case \"1\":\n            return new Response(200, {\n              \"Content-Type\": \"application/json\"\n            }, {\n              \"data\": {\n                \"type\": \"contract-paragraphs\",\n                \"id\": \"0d60b462-2b98-11e8-97a1-080027a8df8b\",\n                \"attributes\": {\n                  \"text\": \"Lorem ipsum dolor sit amet,consectetur adipiscingelit,sed do eiusmod tempor incididunt ut labore et dolor magna aliqua Utenim ad minim veniam,quis nostrud exercitation ullamco laboris nisi ut aliquipex ea commodo consequat\"\n                }\n              },\n              \"pagination\": {\n                \"count\": \"15000\",\n                \"page\": \"1\",\n                \"pages\": \"300\",\n                \"pageSize\": \"50\"\n              }\n            });\n\n          default:\n            break;\n        }\n      });\n      this.get(\"/contracts/:id\", (schema, request) => {\n        let {\n          id\n        } = request.params;\n\n        switch (id) {\n          case \"dc89ff49-8449-11e7-ac1d-3c52820efd20\":\n            return new Response(200, {\n              \"Content-Type\": \"application/json\"\n            }, {\n              \"data\": {\n                \"type\": \"contracts\",\n                \"id\": \"dc89ff49-8449-11e7-ac1d-3c52820efd20\",\n                \"attributes\": {\n                  \"name\": \"Contract Name\"\n                }\n              },\n              \"relationships\": {\n                \"paragraphs\": {\n                  \"links\": {\n                    \"self\": \"/contracts/dc89ff49-8449-11e7-ac1d-3c52820efd20/paragraphs\"\n                  }\n                }\n              }\n            });\n\n          default:\n            break;\n        }\n      });\n    }\n\n  });\n  server.passthrough();\n}","map":{"version":3,"sources":["/Users/seenanair/Desktop/Personal/INTERVIEW/DEMO/ThoughtRiver/case-details-app/src/mock-server.js"],"names":["Response","Server","process","env","NODE_ENV","server","urlPrefix","namespace","routes","get","schema","request","id","queryParams","params","passthrough"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,MAAlB,QAA+B,UAA/B,C,CACA;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,QAAMC,MAAM,GAAG,IAAIJ,MAAJ,CAAW;AACtBK,IAAAA,SAAS,EAAE,wBADW;AAEtBC,IAAAA,SAAS,EAAE,EAFW;;AAGtBC,IAAAA,MAAM,GAAG;AAEP,WAAKC,GAAL,CAAS,2BAAT,EAAsC,CAACC,MAAD,EAASC,OAAT,KAAqB;AACzD,YAAI;AAACC,UAAAA;AAAD,YAAOD,OAAO,CAACE,WAAnB;;AACA,gBAAQD,EAAR;AACI,eAAK,GAAL;AACI,mBAAO,IAAIZ,QAAJ,CAAa,GAAb,EAAkB;AAAC,8BAAiB;AAAlB,aAAlB,EAAyD;AAC5D,sBAAQ;AACN,wBAAQ,qBADF;AAEN,sBAAM,sCAFA;AAGN,8BAAc;AACZ,0BAAQ;AADI;AAHR,eADoD;AAQ5D,4BAAc;AACZ,yBAAS,OADG;AAEZ,wBAAQ,GAFI;AAGZ,yBAAS,KAHG;AAIZ,4BAAY;AAJA;AAR8C,aAAzD,CAAP;;AAeJ,eAAK,GAAL;AACI,mBAAO,IAAIA,QAAJ,CAAa,GAAb,EAAkB;AAAC,8BAAiB;AAAlB,aAAlB,EAAyD;AAC5D,sBAAQ;AACN,wBAAQ,qBADF;AAEN,sBAAM,sCAFA;AAGN,8BAAc;AACZ,0BAAQ;AADI;AAHR,eADoD;AAQ5D,4BAAc;AACZ,yBAAS,OADG;AAEZ,wBAAQ,GAFI;AAGZ,yBAAS,KAHG;AAIZ,4BAAY;AAJA;AAR8C,aAAzD,CAAP;;AAeJ;AAAS;AAjCb;AAmCH,OArCC;AAsCF,WAAKS,GAAL,CAAS,gBAAT,EAA2B,CAACC,MAAD,EAASC,OAAT,KAAqB;AAC5C,YAAI;AAACC,UAAAA;AAAD,YAAOD,OAAO,CAACG,MAAnB;;AACA,gBAAQF,EAAR;AACI,eAAK,sCAAL;AACI,mBAAO,IAAIZ,QAAJ,CAAa,GAAb,EAAkB;AAAC,8BAAiB;AAAlB,aAAlB,EAAyD;AAC5D,sBAAQ;AACI,wBAAO,WADX;AAEI,sBAAK,sCAFT;AAGI,8BAAc;AACV,0BAAQ;AADE;AAHlB,eADoD;AAQpD,+BAAiB;AACb,8BAAc;AACV,2BAAS;AAAC,4BAAQ;AAAT;AADC;AADD;AARmC,aAAzD,CAAP;;AAcJ;AAAS;AAhBb;AAkBH,OApBD;AAqBC;;AAhEqB,GAAX,CAAf;AAkEJK,EAAAA,MAAM,CAACU,WAAP;AACC","sourcesContent":["import {Response, Server} from \"miragejs\"\n// Create a new server instance - Intercepts the requests\nif (process.env.NODE_ENV === \"development\") {\n    const server = new Server({\n        urlPrefix: \"http://localhost:3000/\",\n        namespace: \"\",\n        routes() {\n            \n          this.get(\"/contracts/:id/paragraphs\", (schema, request) => {\n            let {id} = request.queryParams;\n            switch (id) {\n                case \"1\":\n                    return new Response(200, {\"Content-Type\":  \"application/json\"}, {\n                        \"data\": {\n                          \"type\": \"contract-paragraphs\",\n                          \"id\": \"0d60b462-2b98-11e8-97a1-080027a8df8b\",\n                          \"attributes\": {\n                            \"text\": \"Lorem ipsum dolor sit amet,consectetur adipiscingelit,sed do eiusmod tempor incididunt ut labore et dolor magna aliqua Utenim ad minim veniam,quis nostrud exercitation ullamco laboris nisi ut aliquipex ea commodo consequat\"\n                          }\n                        },\n                        \"pagination\": {\n                          \"count\": \"15000\",\n                          \"page\": \"1\",\n                          \"pages\": \"300\",\n                          \"pageSize\": \"50\"\n                        }\n                      });\n                case \"1\":\n                    return new Response(200, {\"Content-Type\":  \"application/json\"}, {\n                        \"data\": {\n                          \"type\": \"contract-paragraphs\",\n                          \"id\": \"0d60b462-2b98-11e8-97a1-080027a8df8b\",\n                          \"attributes\": {\n                            \"text\": \"Lorem ipsum dolor sit amet,consectetur adipiscingelit,sed do eiusmod tempor incididunt ut labore et dolor magna aliqua Utenim ad minim veniam,quis nostrud exercitation ullamco laboris nisi ut aliquipex ea commodo consequat\"\n                          }\n                        },\n                        \"pagination\": {\n                          \"count\": \"15000\",\n                          \"page\": \"1\",\n                          \"pages\": \"300\",\n                          \"pageSize\": \"50\"\n                        }\n                      });\n                default: break;    \n            }\n        });\n        this.get(\"/contracts/:id\", (schema, request) => {\n            let {id} = request.params;\n            switch (id) {\n                case \"dc89ff49-8449-11e7-ac1d-3c52820efd20\":\n                    return new Response(200, {\"Content-Type\":  \"application/json\"}, {\n                        \"data\": {\n                                    \"type\":\"contracts\",\n                                    \"id\":\"dc89ff49-8449-11e7-ac1d-3c52820efd20\",\n                                    \"attributes\": {\n                                        \"name\": \"Contract Name\"\n                                    }\n                                },\n                                \"relationships\": {\n                                    \"paragraphs\": {\n                                        \"links\": {\"self\": \"/contracts/dc89ff49-8449-11e7-ac1d-3c52820efd20/paragraphs\"}\n                        } }\n                        }\n                        );\n                default: break;    \n            }\n        });\n        },\n    });\nserver.passthrough();\n}"]},"metadata":{},"sourceType":"module"}