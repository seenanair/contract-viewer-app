{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataBuilder = () => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n  const formatData = data => {\n    const arr = data.data.map(val => {\n      return {\n        title: val.title,\n        id: val.id\n      };\n    });\n    return arr;\n  };\n  /*  const List = (data:any[]) => {\n      if (!data || data.length === 0) return <p>No repos, sorry</p>;\n      return (\n        <ul>\n          <h2 className='list-head'>Available Public Repositories</h2>\n          {data.map((dataVal) => {\n            return (\n              <li key={dataVal.id} className='list'>\n                <span className='repo-text'>{repo.name} </span>\n                <span className='repo-description'>{repo.description}</span>\n              </li>\n            );\n          })}\n        </ul>\n      );\n    };*/\n\n  /* {\n       dataVal.map((val:any,indx:number) => {\n        return (\n            <li>{val.id}</li>\n        );\n      })}*/\n\n\n  const listData = dataVal => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dataVal && dataVal.data ? formatData(dataVal.data) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: [\"Data\", listData(data), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataBuilder, \"9JwoaDR3IhVmHFx88DLkMf7wNyw=\", false, function () {\n  return [useFetch];\n});\n\n_c = DataBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataBuilder\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx"],"names":["React","Aux","useFetch","DataBuilder","data","loading","error","formatData","arr","map","val","title","id","listData","dataVal"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAGA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEhC,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,OAAN;AAAcC,IAAAA;AAAd,MAAyBJ,QAAQ,CAAE,yDAAF,CAAvC;;AAEA,QAAMK,UAAU,GAAIH,IAAD,IACnB;AACI,UAAMI,GAAoB,GAAIJ,IAAI,CAACA,IAAL,CAAUK,GAAV,CAAeC,GAAD,IAAa;AACxD,aAAO;AAAEC,QAAAA,KAAK,EAAED,GAAG,CAACC,KAAb;AAAoBC,QAAAA,EAAE,EAAEF,GAAG,CAACE;AAA5B,OAAP;AACA,KAF6B,CAA9B;AAGA,WAAOJ,GAAP;AACH,GAND;AAUD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;;;AACE,QAAMK,QAAQ,GAAIC,OAAD,IAAiB;AAChC,wBACA;AAAA,gBACIA,OAAO,IAAIA,OAAO,CAACV,IAAnB,GAAyBG,UAAU,CAACO,OAAO,CAACV,IAAT,CAAnC,GAAkD;AADtD;AAAA;AAAA;AAAA;AAAA,YADA;AAID,GALD;;AAOE,sBACI,QAAC,GAAD;AAAA,uBAEKS,QAAQ,CAACT,IAAD,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlDM;;GAAMD,W;UAEmBD,Q;;;KAFnBC,W","sourcesContent":["\nimport React from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { StructuralData } from \"./SDInterface\";\n\nexport const DataBuilder = () => {\n\n const {data,loading,error} =   useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n const formatData = (data: any): StructuralData[] => \n {\n     const arr:StructuralData[] =  data.data.map((val:any) => {\n      return { title: val.title, id: val.id }\n     })\n     return arr;\n }\n \n\n\n/*  const List = (data:any[]) => {\n    if (!data || data.length === 0) return <p>No repos, sorry</p>;\n    return (\n      <ul>\n        <h2 className='list-head'>Available Public Repositories</h2>\n        {data.map((dataVal) => {\n          return (\n            <li key={dataVal.id} className='list'>\n              <span className='repo-text'>{repo.name} </span>\n              <span className='repo-description'>{repo.description}</span>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };*/\n\n  /* {\n       dataVal.map((val:any,indx:number) => {\n        return (\n            <li>{val.id}</li>\n        );\n      })}*/\n  const listData = (dataVal:any) => {\n    return(  \n    <ul>\n       {dataVal && dataVal.data? formatData(dataVal.data):\"\"}\n      </ul>)\n  }\n\n    return (\n        <Aux>\n            Data\n            {listData(data)};\n        </Aux>\n        )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}