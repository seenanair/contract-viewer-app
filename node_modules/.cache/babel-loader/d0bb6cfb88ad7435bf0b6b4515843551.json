{"ast":null,"code":"var _jsxFileName = \"/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataBuilder = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n\n  const formatData = data => {\n    return {\n      title: data.title,\n      id: data.id\n    };\n  };\n\n  React.useEffect(_s(() => {\n    _s();\n\n    useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n  }, \"WM4OL7CqgzjgXHJL6SXd6kRTA8w=\", false, function () {\n    return [useFetch];\n  }), []);\n  /*  const List = (data:any[]) => {\n      if (!data || data.length === 0) return <p>No repos, sorry</p>;\n      return (\n        <ul>\n          <h2 className='list-head'>Available Public Repositories</h2>\n          {data.map((dataVal) => {\n            return (\n              <li key={dataVal.id} className='list'>\n                <span className='repo-text'>{repo.name} </span>\n                <span className='repo-description'>{repo.description}</span>\n              </li>\n            );\n          })}\n        </ul>\n      );\n    };*/\n\n  const listData = dataVal => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dataVal.map((val, indx) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: val.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Aux, {\n    children: [\"Data\", listData(data), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(DataBuilder, \"JuGb9c29w+juTzdwKwZwUSnXdAk=\", false, function () {\n  return [useFetch];\n});\n\n_c = DataBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataBuilder\");","map":{"version":3,"sources":["/Users/seenanair/Desktop/CCDC_Demo/ccdc-app/src/DataBuilder/DataBuilder.tsx"],"names":["React","Aux","useFetch","DataBuilder","data","loading","error","formatData","title","id","useEffect","listData","dataVal","map","val","indx"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAGA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAAA;;AAEhC,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,OAAN;AAAcC,IAAAA;AAAd,MAAyBJ,QAAQ,CAAE,yDAAF,CAAvC;;AACA,QAAMK,UAAU,GAAIH,IAAD,IAClB;AACI,WAAO;AAAEI,MAAAA,KAAK,EAAEJ,IAAI,CAACI,KAAd;AAAqBC,MAAAA,EAAE,EAAEL,IAAI,CAACK;AAA9B,KAAP;AACH,GAHF;;AAIET,EAAAA,KAAK,CAACU,SAAN,IAAgB,MAAM;AAAA;;AACrBR,IAAAA,QAAQ,CAAE,yDAAF,CAAR;AACD,GAFA;AAAA,YACCA,QADD;AAAA,MAEE,EAFF;AAIH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAMS,QAAQ,GAAIC,OAAD,IAAiB;AAChC,wBACA;AAAA,gBAEIA,OAAO,CAACC,GAAR,CAAY,CAACC,GAAD,EAASC,IAAT,KAAyB;AACrC,4BACI;AAAA,oBAAKD,GAAG,CAACL;AAAT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGD,OAJC;AAFJ;AAAA;AAAA;AAAA;AAAA,YADA;AASD,GAVD;;AAYE,sBACI,QAAC,GAAD;AAAA,uBAEKE,QAAQ,CAACP,IAAD,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA9CM;;IAAMD,W;UAEmBD,Q;;;KAFnBC,W","sourcesContent":["\nimport React from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { StructuralData } from \"./SDInterface\";\n\nexport const DataBuilder = () => {\n\n const {data,loading,error} =   useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`);\n const formatData = (data: any): StructuralData => \n  {\n      return { title: data.title, id: data.id }\n  }\n   React.useEffect(() => {\n    useFetch(`https://api.test.datacite.org/dois?query=prefix:10.5517`)\n  }, []);\n\n/*  const List = (data:any[]) => {\n    if (!data || data.length === 0) return <p>No repos, sorry</p>;\n    return (\n      <ul>\n        <h2 className='list-head'>Available Public Repositories</h2>\n        {data.map((dataVal) => {\n          return (\n            <li key={dataVal.id} className='list'>\n              <span className='repo-text'>{repo.name} </span>\n              <span className='repo-description'>{repo.description}</span>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };*/\n\n  const listData = (dataVal:any) => {\n    return(  \n    <ul>\n        {\n        dataVal.map((val:any,indx:number) => {\n        return (\n            <li>{val.id}</li>\n        );\n      })}\n      </ul>)\n  }\n\n    return (\n        <Aux>\n            Data\n            {listData(data)};\n        </Aux>\n        )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}